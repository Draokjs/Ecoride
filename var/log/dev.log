[2025-06-30T17:19:07.331366+02:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2025-06-30T17:19:07.825981+02:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" 0.482171 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0","total_time":0.482171} []
[2025-06-30T17:19:07.826632+02:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-06-30T17:19:07.827317+02:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2025-06-30T17:19:08.369244+02:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.540487 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.540487} []
[2025-06-30T17:19:08.371534+02:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" 0.01789 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints","total_time":0.01789} []
[2025-06-30T17:19:08.374180+02:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-06-30T17:19:08.403300+02:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.02825 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.02825} []
[2025-06-30T17:19:11.771013+02:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2025-06-30T17:19:12.010433+02:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" 0.235231 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0","total_time":0.235231} []
[2025-06-30T17:19:12.010985+02:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-06-30T17:19:12.011608+02:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2025-06-30T17:19:12.109454+02:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.097036 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.097036} []
[2025-06-30T17:19:12.110553+02:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" 0.01621 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints","total_time":0.01621} []
[2025-06-30T17:19:12.113884+02:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-06-30T17:19:12.151655+02:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.036853 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.036853} []
[2025-06-30T17:38:26.947662+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/Style/Boostrap.css" (from "http://127.0.0.1:8000/register.html")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/Style/Boostrap.css\" (from \"http://127.0.0.1:8000/register.html\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Style/Boostrap.css/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-06-30T20:51:00.919862+02:00] deprecation.INFO: Deprecated: password_hash(): Passing null to parameter #1 ($password) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: password_hash(): Passing null to parameter #1 ($password) of type string is deprecated at C:\\Ecoride symfony\\my_project\\src\\Controller\\registerPost.php:30)"} []
[2025-06-30T20:59:21.404660+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"16","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"16","charset":"utf8"}} []
[2025-06-30T20:59:21.409073+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: could not find driver" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in the driver: could not find driver at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:87)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 0): could not find driver at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 0): could not find driver at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\PgSQL\\Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: could not find driver"} []
[2025-06-30T20:59:21.409378+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-07-01T00:40:40.187748+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"16","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"16","charset":"utf8","dbname":"postgres"}} []
[2025-07-01T00:40:40.193706+02:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-07-01T02:08:29.106693+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"17","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"17","charset":"utf8","dbname":"postgres"}} []
[2025-07-01T02:08:29.143109+02:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ecoridedb" {"sql":"CREATE DATABASE \"ecoridedb\""} []
[2025-07-01T02:08:29.148027+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T02:08:29.149024+02:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-07-01T02:08:52.363576+02:00] deprecation.INFO: User Deprecated: Since doctrine/doctrine-bundle 2.2: The "Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since doctrine/doctrine-bundle 2.2: The \"Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand\" (doctrine:query:sql) is deprecated, use dbal:run-sql command instead. at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\doctrine-bundle\\src\\Command\\Proxy\\RunSqlDoctrineCommand.php:34)"} []
[2025-07-01T02:08:52.376589+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T02:08:52.510885+02:00] doctrine.DEBUG: Executing query: SELECT 1 {"sql":"SELECT 1"} []
[2025-07-01T02:08:52.523538+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T02:09:11.467871+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T02:09:11.600358+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:11.602970+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T02:09:11.609472+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:11.609852+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T02:09:11.612983+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T02:09:11.614250+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:11.614397+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T02:09:11.616011+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:11.616144+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T02:09:11.621742+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T02:09:11.623344+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T02:09:11.625436+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T02:09:11.627757+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T02:09:11.639695+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T02:09:11.654326+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T02:09:11.655195+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T02:09:11.660394+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T02:09:11.660656+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T02:09:11.660865+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T02:09:20.682832+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T02:09:20.713736+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:26.192536+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T02:09:26.193806+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T02:09:26.204458+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T02:09:26.212072+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-07-01T02:09:26.225054+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T02:09:26.226168+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T02:09:26.226443+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T02:09:26.231254+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T02:09:26.232502+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T02:09:26.232939+02:00] doctrine.DEBUG: Executing query: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(50) NOT NULL, ville_arrivee VARCHAR(50) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, date_arivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(50) NOT NULL, ville_arrivee VARCHAR(50) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, date_arivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T02:09:26.236024+02:00] doctrine.DEBUG: Executing query: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T02:09:26.239796+02:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T02:09:26.243058+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T02:09:26.243834+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T02:09:26.244821+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T02:09:26.245508+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T02:09:26.246359+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T02:09:26.246514+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T02:09:26.246625+02:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2025-07-01T02:09:26.248605+02:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T02:09:26.249897+02:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T02:09:26.251795+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701000911","2":"2025-07-01 02:09:26","3":20}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701000911","2":"2025-07-01 02:09:26","3":20},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T02:09:26.252637+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T02:09:26.262949+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T02:09:26.263569+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T02:09:26.263715+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T02:15:48.715495+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T02:15:48.725738+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T02:15:48.764533+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Form\Exception\InvalidArgumentException: "Could not load type "App\Form\SearchType": class does not exist." at FormRegistry.php line 72 {"exception":"[object] (Symfony\\Component\\Form\\Exception\\InvalidArgumentException(code: 0): Could not load type \"App\\Form\\SearchType\": class does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\form\\FormRegistry.php:72)"} []
[2025-07-01T02:15:49.109212+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T02:15:49.281409+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ad1f1"},"request_uri":"https://127.0.0.1:8000/_wdt/2ad1f1?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T02:15:49.519500+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/favicon.ico" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/favicon.ico\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T07:39:54.448503+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T07:39:54.487609+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.490686+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T07:39:54.497923+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T07:39:54.499858+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T07:39:54.500827+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.501044+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T07:39:54.505765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.505977+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T07:39:54.507804+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.507987+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T07:39:54.512245+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T07:39:54.524701+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.525027+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T07:39:54.526869+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.529232+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T07:39:54.534349+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.534619+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T07:39:54.535617+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.535810+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T07:39:54.536640+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.536768+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T07:39:54.537243+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.537374+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T07:39:54.538059+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T07:39:54.539363+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.539510+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T07:39:54.540496+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.540833+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T07:39:54.543366+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T07:39:54.543830+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.543960+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T07:39:54.546933+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:39:54.547116+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T07:39:54.551295+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T07:39:54.551732+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T07:39:54.551878+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T07:39:54.553269+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T07:39:54.553965+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T07:39:54.554592+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T07:39:54.554776+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T07:39:54.554915+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T07:39:54.555046+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.555306+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16407   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16407\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.555499+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.555692+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16399   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16399\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:39:54.557376+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T07:39:54.570304+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T07:39:54.579570+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T07:39:54.584327+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T07:39:54.584601+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T07:39:54.584660+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T07:39:58.060513+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T07:39:58.093950+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:40:03.717687+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:40:03.718845+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T07:40:03.723824+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T07:40:03.725348+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T07:40:03.728995+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:40:03.729251+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T07:40:03.730698+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:40:03.730895+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T07:40:03.733579+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T07:40:03.739665+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T07:40:03.739932+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T07:40:03.741358+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T07:40:03.747216+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T07:40:03.748686+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T07:40:03.748903+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T07:40:03.754191+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T07:40:03.755813+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T07:40:03.756330+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ALTER date_depart DROP NOT NULL {"sql":"ALTER TABLE trip ALTER date_depart DROP NOT NULL"} []
[2025-07-01T07:40:03.759053+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip RENAME COLUMN date_arivee TO date_arrivee {"sql":"ALTER TABLE trip RENAME COLUMN date_arivee TO date_arrivee"} []
[2025-07-01T07:40:03.760592+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701053954","2":"2025-07-01 07:40:03","3":6}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701053954","2":"2025-07-01 07:40:03","3":6},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T07:40:03.762993+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T07:40:03.772508+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T07:44:16.086744+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:44:16.095026+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:44:16.159947+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "home/index.html.twig" (looked into: C:\Ecoride symfony\my_project/templates, C:\Ecoride symfony\my_project\vendor\symfony\twig-bridge/Resources/views/Form)." at FilesystemLoader.php line 234 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"home/index.html.twig\" (looked into: C:\\Ecoride symfony\\my_project/templates, C:\\Ecoride symfony\\my_project\\vendor\\symfony\\twig-bridge/Resources/views/Form). at C:\\Ecoride symfony\\my_project\\vendor\\twig\\twig\\src\\Loader\\FilesystemLoader.php:234)"} []
[2025-07-01T07:44:16.586197+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T07:44:16.765450+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75fb0d"},"request_uri":"https://127.0.0.1:8000/_wdt/75fb0d?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:47:43.792271+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:47:43.796744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:47:43.860811+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\SyntaxError: "A mapping value must be followed by a comma. Unexpected token "name" of value "arrivée" ("punctuation" expected with value ",") in "home/homepage.html.twig" at line 35." at homepage.html.twig line 35 {"exception":"[object] (Twig\\Error\\SyntaxError(code: 0): A mapping value must be followed by a comma. Unexpected token \"name\" of value \"arrivée\" (\"punctuation\" expected with value \",\") in \"home/homepage.html.twig\" at line 35. at C:\\Ecoride symfony\\my_project\\templates\\home\\homepage.html.twig:35)"} []
[2025-07-01T07:47:44.220185+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45945a"},"request_uri":"https://127.0.0.1:8000/_wdt/45945a?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:49:40.311139+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:49:40.318521+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:49:40.487647+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "homepage" as such route does not exist.") in "partials/header.html.twig" at line 10." at header.html.twig line 10 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"homepage\" as such route does not exist.\") in \"partials/header.html.twig\" at line 10. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:10)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"homepage\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:49:40.877452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"332578"},"request_uri":"https://127.0.0.1:8000/_wdt/332578?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:50:59.234331+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:50:59.241348+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:50:59.363778+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "index" as such route does not exist.") in "partials/header.html.twig" at line 10." at header.html.twig line 10 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"index\" as such route does not exist.\") in \"partials/header.html.twig\" at line 10. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:10)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"index\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:50:59.723368+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2eb379"},"request_uri":"https://127.0.0.1:8000/_wdt/2eb379?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:51:32.873163+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:51:32.879822+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:51:33.000903+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "resultats" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"resultats\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"resultats\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:51:33.381233+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61b58f"},"request_uri":"https://127.0.0.1:8000/_wdt/61b58f?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:51:59.384224+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:51:59.390916+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:51:59.514503+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "templates" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"templates\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"templates\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:51:59.847721+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fb2e3f"},"request_uri":"https://127.0.0.1:8000/_wdt/fb2e3f?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:52:08.766765+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:52:08.773642+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:52:08.892140+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:52:09.253666+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6220e"},"request_uri":"https://127.0.0.1:8000/_wdt/f6220e?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:52:21.895065+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:52:21.903043+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:52:22.021904+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trips" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trips\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trips\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:52:22.362503+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66f02e"},"request_uri":"https://127.0.0.1:8000/_wdt/66f02e?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:53:50.240888+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:53:50.248004+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:53:50.367032+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:53:50.719618+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfcf27"},"request_uri":"https://127.0.0.1:8000/_wdt/dfcf27?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:57:00.569292+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:57:00.573651+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:57:00.635792+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:57:01.018379+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T07:57:01.186990+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0932c"},"request_uri":"https://127.0.0.1:8000/_wdt/d0932c?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:57:52.266070+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:57:52.270991+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:57:52.327532+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:57:52.738172+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0be387"},"request_uri":"https://127.0.0.1:8000/_wdt/0be387?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:58:32.149850+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:58:32.156869+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:58:32.280304+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon-espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon-espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon-espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:58:32.659113+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c2ece1"},"request_uri":"https://127.0.0.1:8000/_wdt/c2ece1?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:59:20.827018+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:59:20.834718+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:59:20.914325+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon-espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon-espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon-espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:59:21.269834+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ef20f"},"request_uri":"https://127.0.0.1:8000/_wdt/9ef20f?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:59:36.065068+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:59:36.071793+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:59:36.189528+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "MonEspace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"MonEspace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"MonEspace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:59:36.560497+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e4daa5"},"request_uri":"https://127.0.0.1:8000/_wdt/e4daa5?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T07:59:51.409611+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T07:59:51.417706+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T07:59:51.485615+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "MonEspace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"MonEspace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"MonEspace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T07:59:51.812456+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"efc426"},"request_uri":"https://127.0.0.1:8000/_wdt/efc426?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:00:26.074160+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:00:26.081880+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:00:26.162131+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "MonEspace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"MonEspace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"MonEspace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:00:26.512227+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3e00b"},"request_uri":"https://127.0.0.1:8000/_wdt/c3e00b?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:00:42.653492+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:00:42.661192+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:00:42.743510+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "MonEspace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"MonEspace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"MonEspace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:00:43.084662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7b6d5"},"request_uri":"https://127.0.0.1:8000/_wdt/f7b6d5?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:00:43.803147+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:00:43.810083+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:00:43.874387+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "MonEspace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"MonEspace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"MonEspace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:00:44.170516+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd9be5"},"request_uri":"https://127.0.0.1:8000/_wdt/dd9be5?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:02:00.929279+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:02:00.936973+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:02:01.044347+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon-espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon-espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon-espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:02:01.419299+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c96a2"},"request_uri":"https://127.0.0.1:8000/_wdt/6c96a2?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:02:10.698895+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:02:10.705567+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:02:10.825526+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:02:11.166486+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"929ba3"},"request_uri":"https://127.0.0.1:8000/_wdt/929ba3?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:03:33.171356+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:03:33.179182+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:03:33.263190+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:03:33.729686+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"278e96"},"request_uri":"https://127.0.0.1:8000/_wdt/278e96?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:03:35.758760+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:03:35.765733+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:03:35.829878+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:03:36.106272+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0569b6"},"request_uri":"https://127.0.0.1:8000/_wdt/0569b6?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:03:50.131176+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:03:50.139244+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:03:50.218532+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:03:50.561508+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"630921"},"request_uri":"https://127.0.0.1:8000/_wdt/630921?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:04:20.324797+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:04:20.332839+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:04:20.416128+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:04:20.771698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d658d2"},"request_uri":"https://127.0.0.1:8000/_wdt/d658d2?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:04:21.609329+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:04:21.616189+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:04:21.678842+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:04:21.957468+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0336f0"},"request_uri":"https://127.0.0.1:8000/_wdt/0336f0?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:04:30.930465+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:04:30.938541+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:04:31.017056+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:04:31.367437+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7cd4dc"},"request_uri":"https://127.0.0.1:8000/_wdt/7cd4dc?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:05:06.425617+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:05:06.433562+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:05:06.514177+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:05:06.885742+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1e650"},"request_uri":"https://127.0.0.1:8000/_wdt/c1e650?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:07:00.541899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:07:00.550306+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:07:00.630243+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "mon_espace" as such route does not exist.") in "partials/header.html.twig" at line 16." at header.html.twig line 16 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"mon_espace\" as such route does not exist.\") in \"partials/header.html.twig\" at line 16. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:16)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"mon_espace\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:07:00.995472+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee04ed"},"request_uri":"https://127.0.0.1:8000/_wdt/ee04ed?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:10:29.053109+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:10:29.057531+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:10:29.178266+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:10:29.516674+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T08:10:29.688274+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b29d4a"},"request_uri":"https://127.0.0.1:8000/_wdt/b29d4a?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:11:02.799667+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:11:02.806357+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:11:02.925850+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "Contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"Contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"Contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:11:03.292629+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9661f9"},"request_uri":"https://127.0.0.1:8000/_wdt/9661f9?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:11:13.555651+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:11:13.562354+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:11:13.680895+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "Contact" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"Contact\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"Contact\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:11:14.011062+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a508af"},"request_uri":"https://127.0.0.1:8000/_wdt/a508af?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:12:20.676856+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:12:20.684981+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:12:20.808238+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:12:21.182228+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"668fd5"},"request_uri":"https://127.0.0.1:8000/_wdt/668fd5?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:12:22.524404+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:12:22.530996+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:12:22.595240+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:12:22.881575+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"135865"},"request_uri":"https://127.0.0.1:8000/_wdt/135865?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:12:54.890856+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:12:54.898695+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:12:54.978854+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:12:55.370656+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd5572"},"request_uri":"https://127.0.0.1:8000/_wdt/dd5572?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:13:02.477779+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:13:02.486230+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:13:02.566170+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:13:02.905709+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d634ff"},"request_uri":"https://127.0.0.1:8000/_wdt/d634ff?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:13:04.908215+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:13:04.914712+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:13:04.977174+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:13:05.314157+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c045b8"},"request_uri":"https://127.0.0.1:8000/_wdt/c045b8?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:13:58.402031+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:13:58.409650+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:13:58.488598+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:13:58.836745+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"882e27"},"request_uri":"https://127.0.0.1:8000/_wdt/882e27?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:13:59.657224+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:13:59.663930+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:13:59.726781+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:14:00.014217+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c2c81"},"request_uri":"https://127.0.0.1:8000/_wdt/4c2c81?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:14:19.124290+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:14:19.130664+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:14:19.242653+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "Contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"Contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"Contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:14:19.607347+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a91e2c"},"request_uri":"https://127.0.0.1:8000/_wdt/a91e2c?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:14:20.420383+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:14:20.427314+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:14:20.488933+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "Contacts" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"Contacts\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"Contacts\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:14:20.770910+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c97db0"},"request_uri":"https://127.0.0.1:8000/_wdt/c97db0?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:14:58.345833+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:14:58.353847+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:14:58.488917+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contact" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contact\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contact\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:14:58.840150+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e099eb"},"request_uri":"https://127.0.0.1:8000/_wdt/e099eb?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:15:47.542963+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:15:47.549558+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:15:47.612003+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contact" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contact\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contact\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:15:47.933201+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d02aba"},"request_uri":"https://127.0.0.1:8000/_wdt/d02aba?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:18:41.609497+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:18:41.613983+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:18:41.680525+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contact" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contact\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contact\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:18:42.135434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b057e8"},"request_uri":"https://127.0.0.1:8000/_wdt/b057e8?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:20:29.264909+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:20:29.272497+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:20:29.338832+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "contact" as such route does not exist.") in "partials/header.html.twig" at line 19." at header.html.twig line 19 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"contact\" as such route does not exist.\") in \"partials/header.html.twig\" at line 19. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:19)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"contact\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:20:29.635134+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T08:20:29.813741+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc1f5d"},"request_uri":"https://127.0.0.1:8000/_wdt/cc1f5d?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:23:35.635548+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:23:35.640280+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:23:35.712765+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "login" as such route does not exist.") in "partials/header.html.twig" at line 29." at header.html.twig line 29 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"login\" as such route does not exist.\") in \"partials/header.html.twig\" at line 29. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:29)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"login\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T08:23:36.143753+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9722f7"},"request_uri":"https://127.0.0.1:8000/_wdt/9722f7?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:29:12.861047+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:29:12.865630+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:29:13.242583+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Logo.png" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Logo.png\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Logo.png/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:13.543691+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green1.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green1.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green1.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:13.805715+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green2.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green2.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green2.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:14.083292+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c82a5"},"request_uri":"https://127.0.0.1:8000/_wdt/9c82a5?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:29:20.456591+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T08:29:20.463403+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:29:20.729368+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Logo.png" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Logo.png\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Logo.png/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:20.986016+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green1.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green1.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green1.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:21.229180+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green2.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green2.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green2.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:21.490442+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e01ec4"},"request_uri":"https://127.0.0.1:8000/_wdt/e01ec4?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:29:22.718017+02:00] request.INFO: Matched route "app_trip_index". {"route":"app_trip_index","route_parameters":{"_route":"app_trip_index","_controller":"App\\Controller\\TripController::index"},"request_uri":"https://127.0.0.1:8000/trips","method":"GET"} []
[2025-07-01T08:29:22.723517+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:29:22.768332+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T08:29:22.799310+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.ville_depart AS ville_depart_2, t0.ville_arrivee AS ville_arrivee_3, t0.date_depart AS date_depart_4, t0.date_arrivee AS date_arrivee_5, t0.nombre_passagers AS nombre_passagers_6 FROM trip t0 {"sql":"SELECT t0.id AS id_1, t0.ville_depart AS ville_depart_2, t0.ville_arrivee AS ville_arrivee_3, t0.date_depart AS date_depart_4, t0.date_arrivee AS date_arrivee_5, t0.nombre_passagers AS nombre_passagers_6 FROM trip t0"} []
[2025-07-01T08:29:22.867961+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T08:29:23.073502+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Logo.png" (from "https://127.0.0.1:8000/trips")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Logo.png\" (from \"https://127.0.0.1:8000/trips\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Logo.png/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T08:29:23.669726+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Asset with public path "/assets/js/homepage-BV6Lf1f.js" not found." at AssetMapperDevServerSubscriber.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Asset with public path \"/assets/js/homepage-BV6Lf1f.js\" not found. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\asset-mapper\\AssetMapperDevServerSubscriber.php:130)"} []
[2025-07-01T08:29:23.981762+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"496222"},"request_uri":"https://127.0.0.1:8000/_wdt/496222?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T08:29:24.301415+02:00] request.INFO: Matched route "mon_espace". {"route":"mon_espace","route_parameters":{"_route":"mon_espace","_controller":"App\\Controller\\MonEspaceController::index"},"request_uri":"https://127.0.0.1:8000/mon-espace","method":"GET"} []
[2025-07-01T08:29:24.308710+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T08:29:24.316822+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "mon_espace/index.html.twig" (looked into: C:\Ecoride symfony\my_project/templates, C:\Ecoride symfony\my_project\vendor\symfony\twig-bridge/Resources/views/Form)." at FilesystemLoader.php line 234 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"mon_espace/index.html.twig\" (looked into: C:\\Ecoride symfony\\my_project/templates, C:\\Ecoride symfony\\my_project\\vendor\\symfony\\twig-bridge/Resources/views/Form). at C:\\Ecoride symfony\\my_project\\vendor\\twig\\twig\\src\\Loader\\FilesystemLoader.php:234)"} []
[2025-07-01T08:29:24.602947+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e83eb"},"request_uri":"https://127.0.0.1:8000/_wdt/3e83eb?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T17:08:58.373297+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T17:08:58.460934+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T17:09:00.550914+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green1.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green1.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green1.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T17:09:01.434498+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Logo.png" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Logo.png\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Logo.png/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T17:09:01.708018+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T17:09:01.868630+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Green2.jpg" (from "https://127.0.0.1:8000/")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Green2.jpg\" (from \"https://127.0.0.1:8000/\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Green2.jpg/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T17:09:02.134625+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c205e4"},"request_uri":"https://127.0.0.1:8000/_wdt/c205e4?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T17:09:10.806898+02:00] request.INFO: Matched route "mon_espace". {"route":"mon_espace","route_parameters":{"_route":"mon_espace","_controller":"App\\Controller\\MonEspaceController::index"},"request_uri":"https://127.0.0.1:8000/Espace","method":"GET"} []
[2025-07-01T17:09:10.812255+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T17:09:11.137996+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/Image/Logo.png" (from "https://127.0.0.1:8000/Espace")" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/Image/Logo.png\" (from \"https://127.0.0.1:8000/Espace\") at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/Image/Logo.png/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T17:09:12.128207+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Asset with public path "/assets/js/homepage-BV6Lf1f.js" not found." at AssetMapperDevServerSubscriber.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Asset with public path \"/assets/js/homepage-BV6Lf1f.js\" not found. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\asset-mapper\\AssetMapperDevServerSubscriber.php:130)"} []
[2025-07-01T17:09:12.469087+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"193672"},"request_uri":"https://127.0.0.1:8000/_wdt/193672?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T17:17:36.852453+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T17:17:36.861042+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T17:17:37.289849+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c6b49"},"request_uri":"https://127.0.0.1:8000/_wdt/7c6b49?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T17:17:45.172815+02:00] request.INFO: Matched route "app_trip_index". {"route":"app_trip_index","route_parameters":{"_route":"app_trip_index","_controller":"App\\Controller\\TripController::index"},"request_uri":"https://127.0.0.1:8000/trips","method":"GET"} []
[2025-07-01T17:17:45.178791+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T17:17:45.919167+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T17:17:46.162629+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.ville_depart AS ville_depart_2, t0.ville_arrivee AS ville_arrivee_3, t0.date_depart AS date_depart_4, t0.date_arrivee AS date_arrivee_5, t0.nombre_passagers AS nombre_passagers_6 FROM trip t0 {"sql":"SELECT t0.id AS id_1, t0.ville_depart AS ville_depart_2, t0.ville_arrivee AS ville_arrivee_3, t0.date_depart AS date_depart_4, t0.date_arrivee AS date_arrivee_5, t0.nombre_passagers AS nombre_passagers_6 FROM trip t0"} []
[2025-07-01T17:17:46.390676+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T17:17:46.591402+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08e224"},"request_uri":"https://127.0.0.1:8000/_wdt/08e224?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:18:53.962623+02:00] console.DEBUG: Command "make:fixtures TripFixtures" exited with code "1" {"command":"make:fixtures TripFixtures","code":1} []
[2025-07-01T18:20:27.589227+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T18:20:27.625955+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T18:20:48.991806+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T18:20:49.135388+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T18:20:49.141554+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T18:20:49.186173+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T18:20:49.187994+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Class "Faker\Factory" not found" {"exception":"[object] (Error(code: 0): Class \"Faker\\Factory\" not found at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:16)","command":"doctrine:fixtures:load","message":"Class \"Faker\\Factory\" not found"} []
[2025-07-01T18:20:49.188300+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T18:20:49.203692+02:00] php.CRITICAL: Uncaught Error: Class "Faker\Factory" not found {"exception":"[object] (Error(code: 0): Class \"Faker\\Factory\" not found at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:16)"} []
[2025-07-01T18:20:50.004361+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T18:21:40.084402+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T18:21:40.120266+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T18:21:52.866285+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T18:21:52.877428+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T18:21:52.878815+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T18:21:53.698811+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.699035+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739312+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739459+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739560+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739603+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739657+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739694+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739743+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739782+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739831+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739867+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739915+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.739975+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740025+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740063+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740112+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740147+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740194+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740230+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740279+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740315+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740364+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740399+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740447+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740482+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740528+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740564+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740613+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740648+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740697+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740731+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740778+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740834+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740883+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740919+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.740967+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.741003+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.741051+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.741086+02:00] deprecation.INFO: User Deprecated: Since fakerphp/faker 1.14: Accessing property "city" is deprecated, use "city()" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since fakerphp/faker 1.14: Accessing property \"city\" is deprecated, use \"city()\" instead. at C:\\Ecoride symfony\\my_project\\vendor\\fakerphp\\faker\\src\\Faker\\Generator.php:962)"} []
[2025-07-01T18:21:53.757241+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T18:21:53.863257+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Legros","2":"Nguyen-sur-Courtois","3":"2025-07-26 14:50:17","4":"2025-07-30 14:50:17","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Legros","2":"Nguyen-sur-Courtois","3":"2025-07-26 14:50:17","4":"2025-07-30 14:50:17","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.872569+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Boutin","2":"PineauVille","3":"2025-08-01 05:24:54","4":"2025-08-06 05:24:54","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Boutin","2":"PineauVille","3":"2025-08-01 05:24:54","4":"2025-08-06 05:24:54","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.872871+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"MartinBourg","2":"Gomes-sur-Pascal","3":"2025-07-28 09:14:21","4":"2025-08-02 09:14:21","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"MartinBourg","2":"Gomes-sur-Pascal","3":"2025-07-28 09:14:21","4":"2025-08-02 09:14:21","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.873089+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Michel","2":"Lecomte","3":"2025-07-13 13:19:29","4":"2025-07-16 13:19:29","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Michel","2":"Lecomte","3":"2025-07-13 13:19:29","4":"2025-07-16 13:19:29","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.873294+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Leblancdan","2":"Maury","3":"2025-07-30 20:05:27","4":"2025-07-31 20:05:27","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Leblancdan","2":"Maury","3":"2025-07-30 20:05:27","4":"2025-07-31 20:05:27","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.873486+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bretonboeuf","2":"Pinto","3":"2025-07-31 23:10:45","4":"2025-08-05 23:10:45","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bretonboeuf","2":"Pinto","3":"2025-07-31 23:10:45","4":"2025-08-05 23:10:45","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.873679+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Vallee","2":"Monnier","3":"2025-07-17 13:31:22","4":"2025-07-21 13:31:22","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Vallee","2":"Monnier","3":"2025-07-17 13:31:22","4":"2025-07-21 13:31:22","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.873859+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Clementdan","2":"Lebreton-les-Bains","3":"2025-08-01 09:21:25","4":"2025-08-02 09:21:25","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Clementdan","2":"Lebreton-les-Bains","3":"2025-08-01 09:21:25","4":"2025-08-02 09:21:25","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.874207+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Diallo","2":"Blondel","3":"2025-07-29 23:56:09","4":"2025-07-31 23:56:09","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Diallo","2":"Blondel","3":"2025-07-29 23:56:09","4":"2025-07-31 23:56:09","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.874440+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Briandboeuf","2":"Neveu-sur-Benard","3":"2025-07-22 01:22:52","4":"2025-07-27 01:22:52","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Briandboeuf","2":"Neveu-sur-Benard","3":"2025-07-22 01:22:52","4":"2025-07-27 01:22:52","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.874633+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Carpentierboeuf","2":"Ferreiraboeuf","3":"2025-07-27 00:39:24","4":"2025-07-29 00:39:24","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Carpentierboeuf","2":"Ferreiraboeuf","3":"2025-07-27 00:39:24","4":"2025-07-29 00:39:24","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.874824+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Allain","2":"Costa","3":"2025-07-28 22:21:50","4":"2025-08-02 22:21:50","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Allain","2":"Costa","3":"2025-07-28 22:21:50","4":"2025-08-02 22:21:50","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875002+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Pineau","2":"Gosselin","3":"2025-07-30 02:11:15","4":"2025-08-02 02:11:15","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Pineau","2":"Gosselin","3":"2025-07-30 02:11:15","4":"2025-08-02 02:11:15","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875185+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Allarddan","2":"Valentin-la-Forêt","3":"2025-08-01 16:11:59","4":"2025-08-06 16:11:59","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Allarddan","2":"Valentin-la-Forêt","3":"2025-08-01 16:11:59","4":"2025-08-06 16:11:59","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875380+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Garcia","2":"Colindan","3":"2025-07-29 03:57:19","4":"2025-07-30 03:57:19","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Garcia","2":"Colindan","3":"2025-07-29 03:57:19","4":"2025-07-30 03:57:19","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875563+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Alexandre","2":"Morvan","3":"2025-07-06 15:59:44","4":"2025-07-10 15:59:44","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Alexandre","2":"Morvan","3":"2025-07-06 15:59:44","4":"2025-07-10 15:59:44","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875736+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Blin","2":"Turpin","3":"2025-07-30 08:38:51","4":"2025-08-01 08:38:51","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Blin","2":"Turpin","3":"2025-07-30 08:38:51","4":"2025-08-01 08:38:51","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.875913+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Faivre","2":"BlinBourg","3":"2025-07-29 06:56:29","4":"2025-08-01 06:56:29","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Faivre","2":"BlinBourg","3":"2025-07-29 06:56:29","4":"2025-08-01 06:56:29","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.876091+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bonnet-sur-Bertrand","2":"Rodriguezdan","3":"2025-07-15 11:20:19","4":"2025-07-20 11:20:19","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bonnet-sur-Bertrand","2":"Rodriguezdan","3":"2025-07-15 11:20:19","4":"2025-07-20 11:20:19","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.876269+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Gillet","2":"Lemonnier-sur-Mer","3":"2025-07-14 07:15:40","4":"2025-07-15 07:15:40","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Gillet","2":"Lemonnier-sur-Mer","3":"2025-07-14 07:15:40","4":"2025-07-15 07:15:40","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T18:21:53.902988+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T18:21:53.903379+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T18:21:53.906175+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T18:22:23.415833+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:22:23.423694+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:22:23.929418+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T18:22:24.251092+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"855e07"},"request_uri":"https://127.0.0.1:8000/_wdt/855e07?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:51:27.772351+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:51:27.776867+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:51:27.953855+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "app_trip_index" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"app_trip_index\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"app_trip_index\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T18:51:28.298538+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T18:51:28.484732+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf2bdf"},"request_uri":"https://127.0.0.1:8000/_wdt/bf2bdf?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:55:43.471589+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:55:43.479139+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:55:43.607398+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "index_trip_index" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"index_trip_index\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"index_trip_index\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T18:55:44.031999+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ebfd1"},"request_uri":"https://127.0.0.1:8000/_wdt/2ebfd1?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:56:26.295765+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:56:26.303426+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:56:26.422825+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "index.html.twig" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"index.html.twig\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"index.html.twig\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T18:56:26.797932+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"767cf6"},"request_uri":"https://127.0.0.1:8000/_wdt/767cf6?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:56:39.934547+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:56:39.941814+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:56:40.061488+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trip_index" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trip_index\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trip_index\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T18:56:40.408188+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fb6af"},"request_uri":"https://127.0.0.1:8000/_wdt/7fb6af?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T18:57:43.431287+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T18:57:43.440250+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T18:57:43.586461+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trip" as such route does not exist.") in "partials/header.html.twig" at line 13." at header.html.twig line 13 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trip\" as such route does not exist.\") in \"partials/header.html.twig\" at line 13. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:13)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trip\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T18:57:43.963528+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f730f3"},"request_uri":"https://127.0.0.1:8000/_wdt/f730f3?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:05:24.141195+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:05:24.148609+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:05:24.272108+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trip" as such route does not exist.") in "partials/header.html.twig" at line 12." at header.html.twig line 12 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trip\" as such route does not exist.\") in \"partials/header.html.twig\" at line 12. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:12)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trip\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T19:05:24.635796+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T19:05:24.809695+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a3d229"},"request_uri":"https://127.0.0.1:8000/_wdt/a3d229?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:06:31.174139+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:06:31.181458+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:06:31.271833+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trip" as such route does not exist.") in "partials/header.html.twig" at line 12." at header.html.twig line 12 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trip\" as such route does not exist.\") in \"partials/header.html.twig\" at line 12. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:12)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trip\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T19:06:31.637491+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb9bec"},"request_uri":"https://127.0.0.1:8000/_wdt/cb9bec?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:11:35.539320+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:11:35.543670+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:11:35.618009+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Unable to generate a URL for the named route "trip" as such route does not exist.") in "partials/header.html.twig" at line 12." at header.html.twig line 12 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Unable to generate a URL for the named route \"trip\" as such route does not exist.\") in \"partials/header.html.twig\" at line 12. at C:\\Ecoride symfony\\my_project\\templates\\partials\\header.html.twig:12)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\RouteNotFoundException(code: 0): Unable to generate a URL for the named route \"trip\" as such route does not exist. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Generator\\CompiledUrlGenerator.php:52)"} []
[2025-07-01T19:11:36.085951+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc1514"},"request_uri":"https://127.0.0.1:8000/_wdt/fc1514?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:13:01.134483+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:13:01.142814+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:13:01.279070+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "cities" does not exist in "home/homepage.html.twig" at line 22." at homepage.html.twig line 22 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"cities\" does not exist in \"home/homepage.html.twig\" at line 22. at C:\\Ecoride symfony\\my_project\\templates\\home\\homepage.html.twig:22)"} []
[2025-07-01T19:13:01.708993+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e00c2a"},"request_uri":"https://127.0.0.1:8000/_wdt/e00c2a?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:30:33.761691+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://127.0.0.1:8000/php-version"" at RouterListener.php line 156 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://127.0.0.1:8000/php-version\" at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\http-kernel\\EventListener\\RouterListener.php:156)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/php-version/\". at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\routing\\Matcher\\Dumper\\CompiledUrlMatcherTrait.php:70)"} []
[2025-07-01T19:30:34.085127+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T19:30:34.255861+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff92e2"},"request_uri":"https://127.0.0.1:8000/_wdt/ff92e2?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:30:35.629172+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:30:35.635774+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:30:36.189420+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:30:36.222565+02:00] doctrine.DEBUG: Executing query: SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_ {"sql":"SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_"} []
[2025-07-01T19:30:36.348432+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:30:36.625760+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ff120"},"request_uri":"https://127.0.0.1:8000/_wdt/4ff120?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:30:40.656786+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T19:30:40.663291+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T19:30:40.744640+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:30:40.775477+02:00] doctrine.DEBUG: Executing query: SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_ {"sql":"SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_"} []
[2025-07-01T19:30:40.839939+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:30:41.024605+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29a40a"},"request_uri":"https://127.0.0.1:8000/_wdt/29a40a?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T19:36:05.826411+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:36:05.861233+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:36:10.773346+02:00] console.DEBUG: Command "doctrine:fixtures:load --group=city --purge-with-truncate" exited with code "1" {"command":"doctrine:fixtures:load --group=city --purge-with-truncate","code":1} []
[2025-07-01T19:36:10.773821+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:39:52.555180+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:39:52.589489+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:39:54.859219+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:39:54.871052+02:00] doctrine.DEBUG: Executing statement: TRUNCATE trip CASCADE {"sql":"TRUNCATE trip CASCADE"} []
[2025-07-01T19:39:54.876354+02:00] doctrine.DEBUG: Executing statement: TRUNCATE "user" CASCADE {"sql":"TRUNCATE \"user\" CASCADE"} []
[2025-07-01T19:39:54.888066+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T19:39:54.892067+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load --purge-with-truncate". Message: "Class "App\Entity\City" not found" {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\City\" not found at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\CityFixtures.php:17)","command":"doctrine:fixtures:load --purge-with-truncate","message":"Class \"App\\Entity\\City\" not found"} []
[2025-07-01T19:39:54.892406+02:00] console.DEBUG: Command "doctrine:fixtures:load --purge-with-truncate" exited with code "1" {"command":"doctrine:fixtures:load --purge-with-truncate","code":1} []
[2025-07-01T19:39:54.892699+02:00] php.CRITICAL: Uncaught Error: Class "App\Entity\City" not found {"exception":"[object] (Error(code: 0): Class \"App\\Entity\\City\" not found at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\CityFixtures.php:17)"} []
[2025-07-01T19:39:55.312911+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:41:10.488710+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:41:10.522306+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.524744+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:41:10.534731+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:41:10.536455+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:41:10.536867+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.537015+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:41:10.611739+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.612129+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:41:10.614380+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.614559+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:41:10.617806+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:41:10.625692+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.625937+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:41:10.627297+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:10.673726+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:41:10.833810+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.834195+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:41:10.835284+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.835442+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:41:10.836578+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.836776+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:41:10.837381+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.837635+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:41:10.838458+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:41:10.839911+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.840127+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:41:10.841186+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:10.841590+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:41:10.945375+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T19:41:10.946049+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.946416+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T19:41:10.975909+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:10.976310+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:41:10.980839+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:41:10.981201+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:41:10.981369+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:41:10.982648+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:41:10.983329+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:41:10.983992+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T19:41:10.984175+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T19:41:10.984320+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T19:41:10.984456+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:10.984696+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16407   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16407\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:10.984879+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:10.985078+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16399   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16399\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:11.025509+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:41:11.055467+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:41:11.240755+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T19:41:11.318691+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:41:11.319017+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:41:11.319240+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:41:13.504496+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:41:13.537679+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:21.079550+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:21.080738+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:41:21.087692+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:41:21.088828+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:41:21.092419+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:21.092608+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:41:21.093829+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:21.093987+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:41:21.096395+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:41:21.103053+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:41:21.103389+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:41:21.105143+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:41:21.143749+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:41:21.145648+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:41:21.146028+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:41:21.398690+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:41:21.422989+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T19:41:21.435680+02:00] doctrine.DEBUG: Executing query: CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T19:41:21.467663+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701174110","2":"2025-07-01 19:41:21","3":50}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701174110","2":"2025-07-01 19:41:21","3":50},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T19:41:21.483986+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T19:41:21.494508+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:42:39.882130+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:42:40.018557+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:42:41.847337+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:42:41.859221+02:00] doctrine.DEBUG: Executing statement: DELETE FROM city {"sql":"DELETE FROM city"} []
[2025-07-01T19:42:41.860485+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T19:42:41.861582+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T19:42:41.872591+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:42:41.879841+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T19:42:41.881318+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T19:42:41.881638+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T19:42:41.881865+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T19:42:41.882049+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T19:42:41.882464+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T19:42:41.882757+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T19:42:41.883006+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T19:42:41.883244+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T19:42:41.883424+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T19:42:41.884195+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:42:41.903789+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:42:41.904179+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Strasbourg","3":"2025-07-31 07:58:53","4":"2025-08-04 07:58:53","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Strasbourg","3":"2025-07-31 07:58:53","4":"2025-08-04 07:58:53","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.904876+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lille","2":"Paris","3":"2025-07-06 22:28:06","4":"2025-07-11 22:28:06","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lille","2":"Paris","3":"2025-07-06 22:28:06","4":"2025-07-11 22:28:06","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.905268+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lille","2":"Nice","3":"2025-07-28 12:18:20","4":"2025-07-29 12:18:20","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lille","2":"Nice","3":"2025-07-28 12:18:20","4":"2025-07-29 12:18:20","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.905662+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lille","2":"Strasbourg","3":"2025-07-28 00:20:13","4":"2025-08-02 00:20:13","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lille","2":"Strasbourg","3":"2025-07-28 00:20:13","4":"2025-08-02 00:20:13","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.906064+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Toulouse","2":"Strasbourg","3":"2025-07-09 03:55:34","4":"2025-07-14 03:55:34","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Toulouse","2":"Strasbourg","3":"2025-07-09 03:55:34","4":"2025-07-14 03:55:34","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.906524+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Marseille","2":"Bordeaux","3":"2025-08-01 11:02:37","4":"2025-08-04 11:02:37","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Marseille","2":"Bordeaux","3":"2025-08-01 11:02:37","4":"2025-08-04 11:02:37","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.906903+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Toulouse","3":"2025-07-12 01:38:40","4":"2025-07-15 01:38:40","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Toulouse","3":"2025-07-12 01:38:40","4":"2025-07-15 01:38:40","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.907315+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Nice","3":"2025-07-23 19:59:56","4":"2025-07-27 19:59:56","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Nice","3":"2025-07-23 19:59:56","4":"2025-07-27 19:59:56","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.907549+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Rennes","3":"2025-07-27 22:58:31","4":"2025-07-31 22:58:31","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Rennes","3":"2025-07-27 22:58:31","4":"2025-07-31 22:58:31","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.907754+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Lille","3":"2025-07-03 15:15:32","4":"2025-07-04 15:15:32","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Lille","3":"2025-07-03 15:15:32","4":"2025-07-04 15:15:32","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.907952+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Lyon","3":"2025-07-17 19:55:20","4":"2025-07-20 19:55:20","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Lyon","3":"2025-07-17 19:55:20","4":"2025-07-20 19:55:20","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.908155+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nice","2":"Lyon","3":"2025-07-23 22:15:14","4":"2025-07-24 22:15:14","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nice","2":"Lyon","3":"2025-07-23 22:15:14","4":"2025-07-24 22:15:14","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.908339+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Toulouse","3":"2025-07-05 14:56:45","4":"2025-07-08 14:56:45","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Toulouse","3":"2025-07-05 14:56:45","4":"2025-07-08 14:56:45","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.908525+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Marseille","2":"Paris","3":"2025-07-30 20:54:40","4":"2025-07-31 20:54:40","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Marseille","2":"Paris","3":"2025-07-30 20:54:40","4":"2025-07-31 20:54:40","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.908710+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Lille","3":"2025-07-07 22:32:33","4":"2025-07-08 22:32:33","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Lille","3":"2025-07-07 22:32:33","4":"2025-07-08 22:32:33","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.908891+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Bordeaux","3":"2025-07-18 23:13:01","4":"2025-07-23 23:13:01","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Bordeaux","3":"2025-07-18 23:13:01","4":"2025-07-23 23:13:01","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.909077+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Rennes","3":"2025-07-11 21:08:41","4":"2025-07-14 21:08:41","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Rennes","3":"2025-07-11 21:08:41","4":"2025-07-14 21:08:41","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.909258+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Bordeaux","3":"2025-07-19 14:37:41","4":"2025-07-24 14:37:41","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Bordeaux","3":"2025-07-19 14:37:41","4":"2025-07-24 14:37:41","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.909482+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Lille","3":"2025-07-27 09:55:09","4":"2025-07-28 09:55:09","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Lille","3":"2025-07-27 09:55:09","4":"2025-07-28 09:55:09","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.909695+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Paris","3":"2025-07-07 22:46:31","4":"2025-07-09 22:46:31","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Paris","3":"2025-07-07 22:46:31","4":"2025-07-09 22:46:31","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:42:41.909925+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:42:41.910082+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T19:42:41.912610+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:43:46.758239+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:43:46.790811+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:48.184325+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:48.185442+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:43:48.190303+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:43:48.191304+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:43:48.194747+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:48.194939+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:43:48.196013+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:48.196142+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:43:48.198272+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:43:48.203784+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:48.204004+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:43:48.205300+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:43:48.210519+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:43:48.212040+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:43:48.212292+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:43:48.212843+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:43:48.221303+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:43:52.711919+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:43:52.744980+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:43:53.707907+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:43:53.719728+02:00] doctrine.DEBUG: Executing statement: DELETE FROM city {"sql":"DELETE FROM city"} []
[2025-07-01T19:43:53.721106+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T19:43:53.721705+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T19:43:53.731629+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:43:53.737844+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T19:43:53.738609+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T19:43:53.738964+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T19:43:53.739315+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T19:43:53.739680+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T19:43:53.740020+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T19:43:53.740218+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T19:43:53.740394+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T19:43:53.740553+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T19:43:53.740711+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T19:43:53.741277+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:43:53.759364+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:43:53.759767+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Marseille","2":"Lille","3":"2025-07-12 09:33:42","4":"2025-07-16 09:33:42","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Marseille","2":"Lille","3":"2025-07-12 09:33:42","4":"2025-07-16 09:33:42","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.760542+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Bordeaux","3":"2025-07-27 08:03:00","4":"2025-08-01 08:03:00","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Bordeaux","3":"2025-07-27 08:03:00","4":"2025-08-01 08:03:00","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.760973+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Lille","3":"2025-07-09 03:55:31","4":"2025-07-14 03:55:31","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Lille","3":"2025-07-09 03:55:31","4":"2025-07-14 03:55:31","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.761370+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Strasbourg","2":"Lille","3":"2025-07-29 08:58:31","4":"2025-08-03 08:58:31","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Strasbourg","2":"Lille","3":"2025-07-29 08:58:31","4":"2025-08-03 08:58:31","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.761791+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Marseille","3":"2025-07-28 21:39:39","4":"2025-08-01 21:39:39","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Marseille","3":"2025-07-28 21:39:39","4":"2025-08-01 21:39:39","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.762275+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nice","2":"Nantes","3":"2025-07-13 21:08:43","4":"2025-07-16 21:08:43","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nice","2":"Nantes","3":"2025-07-13 21:08:43","4":"2025-07-16 21:08:43","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.762598+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Nice","3":"2025-07-27 09:15:36","4":"2025-07-28 09:15:36","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Nice","3":"2025-07-27 09:15:36","4":"2025-07-28 09:15:36","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.762814+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Strasbourg","2":"Lille","3":"2025-07-13 01:33:12","4":"2025-07-18 01:33:12","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Strasbourg","2":"Lille","3":"2025-07-13 01:33:12","4":"2025-07-18 01:33:12","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763022+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Strasbourg","2":"Rennes","3":"2025-07-16 20:54:54","4":"2025-07-19 20:54:54","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Strasbourg","2":"Rennes","3":"2025-07-16 20:54:54","4":"2025-07-19 20:54:54","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763222+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Lille","3":"2025-07-23 03:00:19","4":"2025-07-25 03:00:19","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Lille","3":"2025-07-23 03:00:19","4":"2025-07-25 03:00:19","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763411+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Lille","3":"2025-07-29 16:03:44","4":"2025-08-01 16:03:44","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Lille","3":"2025-07-29 16:03:44","4":"2025-08-01 16:03:44","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763598+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Marseille","2":"Lyon","3":"2025-07-04 08:46:58","4":"2025-07-05 08:46:58","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Marseille","2":"Lyon","3":"2025-07-04 08:46:58","4":"2025-07-05 08:46:58","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763794+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Lille","3":"2025-07-04 10:07:15","4":"2025-07-07 10:07:15","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Lille","3":"2025-07-04 10:07:15","4":"2025-07-07 10:07:15","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.763990+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Lyon","3":"2025-07-06 13:49:15","4":"2025-07-11 13:49:15","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Lyon","3":"2025-07-06 13:49:15","4":"2025-07-11 13:49:15","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.764303+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Marseille","3":"2025-07-05 23:34:30","4":"2025-07-07 23:34:30","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Marseille","3":"2025-07-05 23:34:30","4":"2025-07-07 23:34:30","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.764596+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lille","2":"Toulouse","3":"2025-07-13 03:46:22","4":"2025-07-17 03:46:22","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lille","2":"Toulouse","3":"2025-07-13 03:46:22","4":"2025-07-17 03:46:22","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.764893+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Strasbourg","2":"Lille","3":"2025-07-30 06:11:53","4":"2025-08-02 06:11:53","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Strasbourg","2":"Lille","3":"2025-07-30 06:11:53","4":"2025-08-02 06:11:53","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.765217+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Lille","3":"2025-07-06 05:25:20","4":"2025-07-10 05:25:20","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Lille","3":"2025-07-06 05:25:20","4":"2025-07-10 05:25:20","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.765506+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Paris","3":"2025-07-16 05:22:47","4":"2025-07-21 05:22:47","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Paris","3":"2025-07-16 05:22:47","4":"2025-07-21 05:22:47","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.765733+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Strasbourg","3":"2025-07-11 14:29:09","4":"2025-07-16 14:29:09","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Strasbourg","3":"2025-07-11 14:29:09","4":"2025-07-16 14:29:09","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T19:43:53.765994+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T19:43:53.766314+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T19:43:53.768813+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:47:05.623474+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:47:05.655128+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.657587+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:47:05.663442+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:47:05.664572+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:47:05.664757+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.664893+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:47:05.669010+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.669195+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:47:05.670483+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.670632+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:47:05.673747+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:47:05.679825+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.680073+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:47:05.681542+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.683919+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:47:05.687688+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.687872+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:47:05.688671+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.688793+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:47:05.689478+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.689593+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:47:05.690029+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.690145+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:47:05.690802+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:47:05.692107+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.692258+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:47:05.693198+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.693515+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:47:05.695455+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T19:47:05.695739+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.695851+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T19:47:05.697707+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:05.697849+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:47:05.701199+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:47:05.701469+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:47:05.701576+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:47:05.702787+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:47:05.703475+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:47:05.704036+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16437   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16437\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.704339+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T19:47:05.704509+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T19:47:05.704822+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T19:47:05.705059+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.705384+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16407   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16407\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.705666+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16399   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16399\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.705934+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:05.707323+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:47:05.718434+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:47:05.730185+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T19:47:05.735128+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:47:05.735375+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:47:05.735578+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:47:06.329861+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:47:06.365982+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:08.130437+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:08.131588+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:47:08.137237+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:47:08.138199+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:47:08.141628+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:08.141782+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:47:08.143082+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:08.143229+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:47:08.145401+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:47:08.151375+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:47:08.151777+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:47:08.153360+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:47:08.160092+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:47:08.162183+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:47:08.162481+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:47:08.167323+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:47:08.168955+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T19:47:08.169905+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701174705","2":"2025-07-01 19:47:08","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701174705","2":"2025-07-01 19:47:08","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T19:47:08.170738+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T19:47:08.181002+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:55:37.230404+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:55:37.266718+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.269081+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:55:37.274441+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:55:37.275574+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:55:37.275725+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.275915+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:55:37.280143+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.280350+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:55:37.281592+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.281722+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:55:37.284416+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:55:37.290153+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.290396+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:55:37.291757+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.294481+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:55:37.300923+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.301272+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:55:37.302304+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.302534+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:55:37.303437+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.303626+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:55:37.304212+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.304436+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:55:37.305266+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:55:37.306793+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.307022+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:55:37.308168+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.308585+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:55:37.311019+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T19:55:37.311433+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.311617+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T19:55:37.313937+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:37.314150+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:55:37.318014+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:55:37.318329+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:55:37.318464+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:55:37.319643+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:55:37.320334+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:55:37.320912+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16437   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16437\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.321264+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T19:55:37.321427+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T19:55:37.321574+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T19:55:37.321711+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.321965+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16407   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16407\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.322170+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16399   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16399\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.322401+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:37.323721+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:55:37.417474+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:55:37.444182+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T19:55:37.448034+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:55:37.448348+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:55:37.448405+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:55:38.058025+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:55:38.090000+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:38.984759+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:38.985856+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:55:38.991102+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:55:38.992353+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:55:38.996248+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:38.996502+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:55:38.997977+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:38.998134+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:55:39.000664+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:55:39.007063+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:55:39.007319+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:55:39.008853+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:55:39.015184+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:55:39.016574+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:55:39.016811+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:55:39.021477+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:55:39.022883+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T19:55:39.023303+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD ville_depart_id INT NOT NULL {"sql":"ALTER TABLE trip ADD ville_depart_id INT NOT NULL"} []
[2025-07-01T19:55:39.187339+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T19:55:39.190190+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart_id » de la table « trip » contient des valeurs NULL" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 7): An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart_id » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:47)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart_id » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 23502): SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart_id » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart_id » de la table « trip » contient des valeurs NULL"} []
[2025-07-01T19:55:39.190631+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T19:55:39.209769+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:56:23.658512+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:56:23.690955+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:23.706759+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T19:56:23.710385+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:23.710667+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T19:56:23.713976+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:23.714244+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:56:23.722570+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:56:23.723193+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:23.723389+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:56:23.725212+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:56:23.728559+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:56:23.730437+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16437   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16437\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731006+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731308+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731472+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731622+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731756+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16416   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16416\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:23.731976+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16407   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16407\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:23.732180+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16399   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16399\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:23.732338+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:23.748387+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T19:56:23.748552+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE city_id_seq CASCADE {"sql":"DROP SEQUENCE city_id_seq CASCADE"} []
[2025-07-01T19:56:23.756409+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE trip_id_seq CASCADE {"sql":"DROP SEQUENCE trip_id_seq CASCADE"} []
[2025-07-01T19:56:23.757646+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE user_id_seq CASCADE {"sql":"DROP SEQUENCE user_id_seq CASCADE"} []
[2025-07-01T19:56:23.758828+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE messenger_messages_id_seq CASCADE {"sql":"DROP SEQUENCE messenger_messages_id_seq CASCADE"} []
[2025-07-01T19:56:23.760148+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip DROP CONSTRAINT FK_7656F53B497832A6 {"sql":"ALTER TABLE trip DROP CONSTRAINT FK_7656F53B497832A6"} []
[2025-07-01T19:56:23.763008+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip DROP CONSTRAINT FK_7656F53B34AC9A4B {"sql":"ALTER TABLE trip DROP CONSTRAINT FK_7656F53B34AC9A4B"} []
[2025-07-01T19:56:23.763373+02:00] doctrine.DEBUG: Executing statement: DROP TABLE city {"sql":"DROP TABLE city"} []
[2025-07-01T19:56:23.765266+02:00] doctrine.DEBUG: Executing statement: DROP TABLE trip {"sql":"DROP TABLE trip"} []
[2025-07-01T19:56:23.766410+02:00] doctrine.DEBUG: Executing statement: DROP TABLE "user" {"sql":"DROP TABLE \"user\""} []
[2025-07-01T19:56:23.768312+02:00] doctrine.DEBUG: Executing statement: DROP TABLE messenger_messages {"sql":"DROP TABLE messenger_messages"} []
[2025-07-01T19:56:23.780173+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:56:23.780646+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:56:23.780868+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:56:24.357133+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:56:24.390743+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:25.377232+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:25.378373+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:56:25.383845+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:56:25.384812+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:25.388210+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:25.388379+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:56:25.389623+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:25.389750+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:56:25.391832+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:56:25.397761+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:25.398195+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:56:25.399951+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:25.406827+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:56:25.408491+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:56:25.408754+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:56:25.413358+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:56:25.415029+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T19:56:25.415571+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD ville_depart_id INT NOT NULL {"sql":"ALTER TABLE trip ADD ville_depart_id INT NOT NULL"} []
[2025-07-01T19:56:25.441636+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T19:56:25.443698+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas"} []
[2025-07-01T19:56:25.443989+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T19:56:25.456367+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:56:58.867673+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:56:58.899603+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:58.916007+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T19:56:58.919644+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:58.919865+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T19:56:58.922713+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:56:58.922851+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:56:58.931335+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:56:58.931824+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:58.931944+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:56:58.933599+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:56:58.935538+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:56:58.937496+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:56:58.937983+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:56:58.947252+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:56:58.947553+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T19:56:58.947634+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T19:56:59.551852+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T19:56:59.583263+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:57:00.747589+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:57:00.748707+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T19:57:00.753826+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T19:57:00.754731+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T19:57:00.758088+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:57:00.758246+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T19:57:00.759393+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:57:00.759548+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T19:57:00.761609+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T19:57:00.767311+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T19:57:00.767557+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T19:57:00.768903+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T19:57:00.774556+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:57:00.775884+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:57:00.776122+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T19:57:00.780306+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T19:57:00.781438+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T19:57:00.781829+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD ville_depart_id INT NOT NULL {"sql":"ALTER TABLE trip ADD ville_depart_id INT NOT NULL"} []
[2025-07-01T19:57:00.785981+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T19:57:00.787692+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas"} []
[2025-07-01T19:57:00.788089+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T19:57:00.800311+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:00:26.689717+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:00:26.721189+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:26.736562+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:00:26.739522+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:26.739771+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:00:26.742371+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:26.742563+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:00:26.749178+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:00:26.749547+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:26.749744+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:00:26.751353+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:00:26.753286+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:00:26.753913+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:26.756490+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:00:26.757378+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:00:26.759632+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:00:26.760019+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:00:26.760212+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:00:45.952363+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:00:45.984422+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:45.999698+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:00:46.002873+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:46.003118+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:00:46.005708+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:46.005907+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:00:46.012142+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:00:46.012510+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:46.012761+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:00:46.014476+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:00:46.016458+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:00:46.017080+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:46.019608+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:00:46.020490+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:00:46.021033+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:46.021479+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:00:46.021886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:46.022048+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:00:46.022614+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:00:46.022769+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:00:46.025254+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:00:46.026485+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:00:46.027212+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:00:46.027739+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:00:46.028330+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:00:46.033351+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart_id INT NOT NULL, ville_arrivee_id INT NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart_id INT NOT NULL, ville_arrivee_id INT NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:00:46.035962+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_7656F53B497832A6 ON trip (ville_depart_id) {"sql":"CREATE INDEX IDX_7656F53B497832A6 ON trip (ville_depart_id)"} []
[2025-07-01T20:00:46.036847+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_7656F53B34AC9A4B ON trip (ville_arrivee_id) {"sql":"CREATE INDEX IDX_7656F53B34AC9A4B ON trip (ville_arrivee_id)"} []
[2025-07-01T20:00:46.037559+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:00:46.040128+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:00:46.042896+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T20:00:46.043804+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T20:00:46.044574+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T20:00:46.045362+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:00:46.046435+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:00:46.046638+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:00:46.046863+02:00] doctrine.DEBUG: Executing statement: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$     BEGIN         PERFORM pg_notify('messenger_messages', NEW.queue_name::text);         RETURN NEW;     END; $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n    BEGIN\n        PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n        RETURN NEW;\n    END;\n$$ LANGUAGE plpgsql;"} []
[2025-07-01T20:00:46.053861+02:00] doctrine.DEBUG: Executing statement: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T20:00:46.055352+02:00] doctrine.DEBUG: Executing statement: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T20:00:46.056665+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip ADD CONSTRAINT FK_7656F53B497832A6 FOREIGN KEY (ville_depart_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE trip ADD CONSTRAINT FK_7656F53B497832A6 FOREIGN KEY (ville_depart_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-07-01T20:00:46.059496+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip ADD CONSTRAINT FK_7656F53B34AC9A4B FOREIGN KEY (ville_arrivee_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE trip ADD CONSTRAINT FK_7656F53B34AC9A4B FOREIGN KEY (ville_arrivee_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-07-01T20:00:46.069409+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:00:46.069800+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:00:46.069916+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:01:16.826609+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:01:16.858466+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:01:18.027408+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:01:18.041484+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T20:01:18.043106+02:00] doctrine.DEBUG: Executing statement: DELETE FROM city {"sql":"DELETE FROM city"} []
[2025-07-01T20:01:18.043778+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T20:01:18.055678+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:01:18.062297+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T20:01:18.063758+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T20:01:18.064115+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T20:01:18.064349+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T20:01:18.064670+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T20:01:18.064999+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T20:01:18.065463+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T20:01:18.065736+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T20:01:18.066009+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T20:01:18.066325+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T20:01:18.067139+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:01:18.084872+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:01:18.086609+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "App\Entity\Trip::setVilleDepart(): Argument #1 ($villeDepart) must be of type ?App\Entity\City, string given, called in C:\Ecoride symfony\my_project\src\DataFixtures\TripFixtures.php on line 31" {"exception":"[object] (TypeError(code: 0): App\\Entity\\Trip::setVilleDepart(): Argument #1 ($villeDepart) must be of type ?App\\Entity\\City, string given, called in C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php on line 31 at C:\\Ecoride symfony\\my_project\\src\\Entity\\Trip.php:48)","command":"doctrine:fixtures:load","message":"App\\Entity\\Trip::setVilleDepart(): Argument #1 ($villeDepart) must be of type ?App\\Entity\\City, string given, called in C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php on line 31"} []
[2025-07-01T20:01:18.086897+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T20:01:18.087167+02:00] php.CRITICAL: Uncaught Error: App\Entity\Trip::setVilleDepart(): Argument #1 ($villeDepart) must be of type ?App\Entity\City, string given, called in C:\Ecoride symfony\my_project\src\DataFixtures\TripFixtures.php on line 31 {"exception":"[object] (TypeError(code: 0): App\\Entity\\Trip::setVilleDepart(): Argument #1 ($villeDepart) must be of type ?App\\Entity\\City, string given, called in C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php on line 31 at C:\\Ecoride symfony\\my_project\\src\\Entity\\Trip.php:48)"} []
[2025-07-01T20:01:18.101141+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:03:22.438167+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:03:22.481582+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:03:24.826391+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:03:24.839807+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T20:03:24.841574+02:00] doctrine.DEBUG: Executing statement: DELETE FROM city {"sql":"DELETE FROM city"} []
[2025-07-01T20:03:24.842401+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T20:03:24.850102+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:03:24.856951+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T20:03:24.858036+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T20:03:24.858546+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T20:03:24.858995+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T20:03:24.859458+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T20:03:24.859847+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T20:03:24.860178+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T20:03:24.860392+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T20:03:24.860583+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T20:03:24.860775+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T20:03:24.861461+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:03:24.879323+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0"} []
[2025-07-01T20:03:24.885414+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:03:24.901944+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-21 00:28:07","2":"2025-07-24 00:28:07","3":3,"4":11,"5":17}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-21 00:28:07","2":"2025-07-24 00:28:07","3":3,"4":11,"5":17},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.903439+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-21 07:17:54","2":"2025-07-22 07:17:54","3":3,"4":13,"5":19}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-21 07:17:54","2":"2025-07-22 07:17:54","3":3,"4":13,"5":19},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.903985+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-27 23:49:59","2":"2025-07-30 23:49:59","3":1,"4":13,"5":12}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-27 23:49:59","2":"2025-07-30 23:49:59","3":1,"4":13,"5":12},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.904464+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-13 02:48:53","2":"2025-07-18 02:48:53","3":4,"4":11,"5":14}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-13 02:48:53","2":"2025-07-18 02:48:53","3":4,"4":11,"5":14},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.905009+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-08-01 10:10:00","2":"2025-08-05 10:10:00","3":3,"4":19,"5":16}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-08-01 10:10:00","2":"2025-08-05 10:10:00","3":3,"4":19,"5":16},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.905544+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-03 14:53:14","2":"2025-07-07 14:53:14","3":2,"4":11,"5":15}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-03 14:53:14","2":"2025-07-07 14:53:14","3":2,"4":11,"5":15},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.906030+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-10 03:42:39","2":"2025-07-14 03:42:39","3":3,"4":19,"5":18}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-10 03:42:39","2":"2025-07-14 03:42:39","3":3,"4":19,"5":18},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.906378+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-27 16:24:24","2":"2025-07-30 16:24:24","3":5,"4":12,"5":15}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-27 16:24:24","2":"2025-07-30 16:24:24","3":5,"4":12,"5":15},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.906611+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-26 03:10:53","2":"2025-07-31 03:10:53","3":5,"4":12,"5":20}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-26 03:10:53","2":"2025-07-31 03:10:53","3":5,"4":12,"5":20},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.906872+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-21 15:18:25","2":"2025-07-22 15:18:25","3":4,"4":19,"5":11}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-21 15:18:25","2":"2025-07-22 15:18:25","3":4,"4":19,"5":11},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.907100+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-21 17:15:37","2":"2025-07-25 17:15:37","3":5,"4":17,"5":16}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-21 17:15:37","2":"2025-07-25 17:15:37","3":5,"4":17,"5":16},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.907310+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-31 18:57:40","2":"2025-08-05 18:57:40","3":4,"4":16,"5":17}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-31 18:57:40","2":"2025-08-05 18:57:40","3":4,"4":16,"5":17},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.907517+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-18 15:47:04","2":"2025-07-20 15:47:04","3":1,"4":18,"5":12}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-18 15:47:04","2":"2025-07-20 15:47:04","3":1,"4":18,"5":12},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.907735+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-25 09:44:42","2":"2025-07-30 09:44:42","3":4,"4":19,"5":13}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-25 09:44:42","2":"2025-07-30 09:44:42","3":4,"4":19,"5":13},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.907951+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-05 21:25:48","2":"2025-07-08 21:25:48","3":1,"4":17,"5":15}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-05 21:25:48","2":"2025-07-08 21:25:48","3":1,"4":17,"5":15},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.908158+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-07 16:54:25","2":"2025-07-10 16:54:25","3":4,"4":11,"5":12}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-07 16:54:25","2":"2025-07-10 16:54:25","3":4,"4":11,"5":12},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.908364+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-07 00:06:12","2":"2025-07-10 00:06:12","3":5,"4":18,"5":17}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-07 00:06:12","2":"2025-07-10 00:06:12","3":5,"4":18,"5":17},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.908577+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-09 20:14:03","2":"2025-07-12 20:14:03","3":1,"4":13,"5":11}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-09 20:14:03","2":"2025-07-12 20:14:03","3":1,"4":13,"5":11},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.908793+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-06 16:31:46","2":"2025-07-08 16:31:46","3":2,"4":18,"5":14}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-06 16:31:46","2":"2025-07-08 16:31:46","3":2,"4":18,"5":14},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.908996+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-19 11:01:01","2":"2025-07-22 11:01:01","3":1,"4":11,"5":15}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-19 11:01:01","2":"2025-07-22 11:01:01","3":1,"4":11,"5":15},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:03:24.909219+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:03:24.909340+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T20:03:24.911033+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:06:29.130472+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:06:29.165764+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.168129+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:06:29.173718+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:06:29.174788+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:06:29.174953+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.175084+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:06:29.179381+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.179604+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:06:29.180900+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.181043+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:06:29.183450+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:06:29.189625+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.189869+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:06:29.191250+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:29.193302+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:06:29.197960+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.198167+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:06:29.199064+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.199228+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:06:29.200112+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.200275+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:06:29.200887+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.201024+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:06:29.201853+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:06:29.203383+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:29.203564+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:06:29.204678+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:29.205020+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:06:32.625555+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:06:32.626135+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:32.626252+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:06:32.628238+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:32.628424+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:06:32.631862+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:06:32.632231+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:06:32.632364+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:06:32.633505+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:06:32.634241+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:06:32.634923+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16446   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16446\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:32.635193+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:32.635441+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:06:32.635589+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:06:32.635717+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:06:32.635861+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:32.636076+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16464   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16464\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:32.636260+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:06:32.636397+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:06:32.636542+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:32.638423+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:06:32.649897+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:06:32.657892+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:06:32.661824+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:06:32.661905+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:06:32.662317+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:06:33.260211+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:06:33.296464+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:34.606563+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:34.607703+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:06:34.612925+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:06:34.614046+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:06:34.617410+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:34.617644+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:06:34.618969+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:34.619201+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:06:34.621258+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:06:34.627162+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:06:34.627438+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:06:34.628780+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:06:34.634841+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:06:34.636516+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:06:34.636832+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:06:34.641281+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:06:34.642497+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:06:34.642970+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD ville_depart_id INT NOT NULL {"sql":"ALTER TABLE trip ADD ville_depart_id INT NOT NULL"} []
[2025-07-01T20:06:34.647393+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:06:34.649197+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42701]: Duplicate column: 7 ERREUR:  la colonne « ville_depart_id » de la relation « trip » existe déjà" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 7): An exception occurred while executing a query: SQLSTATE[42701]: Duplicate column: 7 ERREUR:  la colonne « ville_depart_id » de la relation « trip » existe déjà at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:87)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42701]: Duplicate column: 7 ERREUR:  la colonne « ville_depart_id » de la relation « trip » existe déjà at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42701): SQLSTATE[42701]: Duplicate column: 7 ERREUR:  la colonne « ville_depart_id » de la relation « trip » existe déjà at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42701]: Duplicate column: 7 ERREUR:  la colonne « ville_depart_id » de la relation « trip » existe déjà"} []
[2025-07-01T20:06:34.649502+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T20:06:34.665179+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:07:25.879131+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:07:25.912792+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:07:25.928771+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:07:25.931524+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:07:25.931833+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:07:25.935044+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:07:25.935265+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:07:25.943790+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:07:25.944319+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:07:25.944548+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:07:25.946303+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:07:25.948416+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:07:25.950339+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16446   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16446\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:07:25.950901+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:07:25.951252+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:07:25.951468+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:07:25.951692+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:07:25.951918+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16473   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16473\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:07:25.952231+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16464   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16464\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:07:25.952526+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:07:25.952810+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:07:25.953088+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16453   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16453\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:07:25.953447+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:07:25.954169+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:07:25.954315+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE city_id_seq CASCADE {"sql":"DROP SEQUENCE city_id_seq CASCADE"} []
[2025-07-01T20:07:25.957304+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE trip_id_seq CASCADE {"sql":"DROP SEQUENCE trip_id_seq CASCADE"} []
[2025-07-01T20:07:25.958227+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE user_id_seq CASCADE {"sql":"DROP SEQUENCE user_id_seq CASCADE"} []
[2025-07-01T20:07:25.959095+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE messenger_messages_id_seq CASCADE {"sql":"DROP SEQUENCE messenger_messages_id_seq CASCADE"} []
[2025-07-01T20:07:25.959888+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip DROP CONSTRAINT FK_7656F53B497832A6 {"sql":"ALTER TABLE trip DROP CONSTRAINT FK_7656F53B497832A6"} []
[2025-07-01T20:07:25.960368+02:00] doctrine.DEBUG: Executing statement: ALTER TABLE trip DROP CONSTRAINT FK_7656F53B34AC9A4B {"sql":"ALTER TABLE trip DROP CONSTRAINT FK_7656F53B34AC9A4B"} []
[2025-07-01T20:07:25.960746+02:00] doctrine.DEBUG: Executing statement: DROP TABLE city {"sql":"DROP TABLE city"} []
[2025-07-01T20:07:25.961886+02:00] doctrine.DEBUG: Executing statement: DROP TABLE trip {"sql":"DROP TABLE trip"} []
[2025-07-01T20:07:25.963736+02:00] doctrine.DEBUG: Executing statement: DROP TABLE "user" {"sql":"DROP TABLE \"user\""} []
[2025-07-01T20:07:25.965006+02:00] doctrine.DEBUG: Executing statement: DROP TABLE messenger_messages {"sql":"DROP TABLE messenger_messages"} []
[2025-07-01T20:07:25.976019+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:07:25.976391+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:07:25.976484+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:09:53.795944+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:09:53.828697+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.831448+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:09:53.836317+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:09:53.837225+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:09:53.837355+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.837473+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:09:53.841486+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.841705+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:09:53.843005+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.843206+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:09:53.845352+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:09:53.850705+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.850968+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:09:53.852338+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:09:53.854217+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:09:53.856536+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.856793+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:09:53.857621+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.857838+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:09:53.858662+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.858870+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:09:53.859489+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.859690+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:09:53.860455+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:09:53.861782+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:09:53.862028+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:09:53.863031+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:09:53.863430+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.714564+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:14:00.749495+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.752764+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.758938+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:14:00.760049+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:14:00.760228+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.760380+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.764817+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.765052+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.766348+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.766488+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.768682+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.775377+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.775698+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.777263+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.779224+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.781154+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.781328+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.782128+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.782257+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.783016+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.783135+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.783612+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.783734+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.784425+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.785704+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.785859+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.786828+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.787153+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.787287+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.787391+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.788091+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.788197+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.788853+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.788964+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.789408+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.789535+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.790197+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.791416+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.791569+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.792706+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.793136+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.795594+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.795810+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.796022+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.796756+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.796874+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.797523+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.797625+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.798111+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.798243+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.798891+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.800111+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.800254+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.801231+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.801540+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.823748+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.824093+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.824985+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.825187+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.825959+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.826141+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.826660+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.826868+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.827585+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.828893+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.829109+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.830119+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.830516+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.830671+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.830774+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.831440+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.831545+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.832168+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.832264+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.832733+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.832868+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.833506+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.834687+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.834824+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.835761+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.836050+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.836166+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.836259+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.836911+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.837007+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.837678+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.837777+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.838186+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.838309+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.838929+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.840085+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.840218+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.841153+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.841457+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.854429+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.854858+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.855826+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.855997+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.856742+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.856857+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.857317+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.857443+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.858112+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.859383+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.859531+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.860467+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.860770+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.860912+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.861013+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.861651+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.861748+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:14:00.862524+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.862718+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:14:00.863169+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.863297+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:14:00.863974+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:14:00.865164+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:14:00.865309+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:14:00.866209+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:14:00.866508+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:14:00.877771+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:16:10.265443+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:16:10.402009+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.404426+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:16:10.408903+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:16:10.409851+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:16:10.409976+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.410098+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:16:10.414116+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.414269+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:16:10.415413+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.415600+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:16:10.417695+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:16:10.423469+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.423685+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:16:10.424999+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:16:10.426788+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:16:10.428572+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.428710+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:16:10.429467+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.429588+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:16:10.430263+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.430375+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:16:10.430820+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.430948+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:16:10.431675+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:16:10.433009+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.433164+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:16:10.434115+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:16:10.434426+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:16:10.436425+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:16:10.436691+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.436796+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:16:10.437921+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:10.438030+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:16:10.440909+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:16:10.441410+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:16:10.441623+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:16:10.442850+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:16:10.443693+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:16:10.444335+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:16:10.445841+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:16:10.459545+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:16:10.470807+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:16:10.471730+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:16:10.475830+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:16:10.476083+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:16:10.476338+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:16:16.026713+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:16:16.058679+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:18.252170+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:18.253367+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:16:18.259106+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:16:18.260083+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:16:18.263707+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:18.263900+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:16:18.265130+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:18.265263+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:16:18.267848+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:16:18.274725+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:16:18.274932+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:16:18.276349+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:16:18.281387+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:16:18.282399+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:16:18.282654+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:16:18.287318+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:16:18.288674+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:16:18.289110+02:00] doctrine.DEBUG: Executing query: CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE city (id SERIAL NOT NULL, name VARCHAR(100) NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:16:18.294187+02:00] doctrine.DEBUG: Executing query: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart_id INT NOT NULL, ville_arrivee_id INT NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart_id INT NOT NULL, ville_arrivee_id INT NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:16:18.296674+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_7656F53B497832A6 ON trip (ville_depart_id) {"sql":"CREATE INDEX IDX_7656F53B497832A6 ON trip (ville_depart_id)"} []
[2025-07-01T20:16:18.297881+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_7656F53B34AC9A4B ON trip (ville_arrivee_id) {"sql":"CREATE INDEX IDX_7656F53B34AC9A4B ON trip (ville_arrivee_id)"} []
[2025-07-01T20:16:18.298580+02:00] doctrine.DEBUG: Executing query: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:16:18.301782+02:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:16:18.304441+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T20:16:18.305163+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T20:16:18.305930+02:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T20:16:18.306838+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:16:18.307485+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:16:18.307692+02:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:16:18.307817+02:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2025-07-01T20:16:18.309614+02:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T20:16:18.311040+02:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T20:16:18.311654+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD CONSTRAINT FK_7656F53B497832A6 FOREIGN KEY (ville_depart_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE trip ADD CONSTRAINT FK_7656F53B497832A6 FOREIGN KEY (ville_depart_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-07-01T20:16:18.313474+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD CONSTRAINT FK_7656F53B34AC9A4B FOREIGN KEY (ville_arrivee_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE trip ADD CONSTRAINT FK_7656F53B34AC9A4B FOREIGN KEY (ville_arrivee_id) REFERENCES city (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-07-01T20:16:18.314555+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701181610","2":"2025-07-01 20:16:18","3":27}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701181610","2":"2025-07-01 20:16:18","3":27},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T20:16:18.315368+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T20:16:18.324873+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:25:06.234837+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:25:06.269807+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.272822+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:25:06.278783+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:25:06.280000+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:25:06.280282+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.280435+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:25:06.285575+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.286005+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:25:06.288184+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.288499+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:25:06.291360+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:25:06.298916+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.299221+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:25:06.301067+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.303387+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:25:06.307238+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.307435+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:25:06.308298+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.308455+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:25:06.309243+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.309391+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:25:06.309905+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.310117+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:25:06.310925+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:25:06.312356+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.312586+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:25:06.313743+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.314211+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:25:06.316621+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:25:06.316986+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.317104+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:25:06.319265+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:06.319429+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:25:06.323593+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:25:06.324047+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:25:06.324312+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:25:06.325674+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:25:06.326565+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:25:06.327206+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.327493+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.327769+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:25:06.327981+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:25:06.328126+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:25:06.328262+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.328493+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16518   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16518\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.328714+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:25:06.328864+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:25:06.329001+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:06.331229+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:25:06.344234+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:25:06.352890+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:25:06.357334+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:25:06.357653+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:25:06.357827+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:25:07.002990+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:25:07.035833+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:08.063992+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:08.065092+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:25:08.070370+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:25:08.071371+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:25:08.075163+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:08.075458+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:25:08.076986+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:08.077109+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:25:08.079245+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:25:08.086055+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:25:08.086346+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:25:08.087852+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:25:08.094380+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:25:08.096511+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:25:08.096885+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:25:08.101662+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:25:08.103225+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:25:08.104137+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701182506","2":"2025-07-01 20:25:08","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701182506","2":"2025-07-01 20:25:08","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T20:25:08.104964+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T20:25:08.114850+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:28:54.000625+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:28:54.033268+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:28:55.485996+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:28:55.499859+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T20:28:55.501953+02:00] doctrine.DEBUG: Executing statement: DELETE FROM city {"sql":"DELETE FROM city"} []
[2025-07-01T20:28:55.502581+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T20:28:55.510942+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:28:55.517937+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T20:28:55.518961+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T20:28:55.519187+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T20:28:55.519361+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T20:28:55.519535+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T20:28:55.519699+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T20:28:55.519876+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T20:28:55.520037+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T20:28:55.520205+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T20:28:55.520416+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T20:28:55.521064+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:28:55.539059+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0"} []
[2025-07-01T20:28:55.544137+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:28:55.545246+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Call to undefined method App\Entity\Trip::setDateDepart()" {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Trip::setDateDepart() at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:36)","command":"doctrine:fixtures:load","message":"Call to undefined method App\\Entity\\Trip::setDateDepart()"} []
[2025-07-01T20:28:55.545632+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T20:28:55.545979+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Trip::setDateDepart() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Trip::setDateDepart() at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:36)"} []
[2025-07-01T20:28:55.574333+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:31:33.786757+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:31:33.820680+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.823322+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:31:33.831985+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:31:33.833677+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:31:33.833902+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.834068+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:31:33.838963+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.839287+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:31:33.841073+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.841316+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:31:33.844869+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:31:33.852892+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.853223+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:31:33.855364+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.857726+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:31:33.861861+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.862068+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:31:33.862922+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.863086+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:31:33.863851+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.864052+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:31:33.864587+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.864740+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:31:33.865462+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:31:33.866925+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.867126+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:31:33.868200+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.868593+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:31:33.870959+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:31:33.871382+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.871570+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:31:33.873605+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:33.873809+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:31:33.877686+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:31:33.878152+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:31:33.878309+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:31:33.879550+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:31:33.880323+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:31:33.880915+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.881173+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.881446+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:31:33.881598+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:31:33.881807+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:31:33.881952+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.882180+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16518   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16518\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.882383+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:31:33.882529+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:31:33.882663+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:33.884927+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:31:33.897287+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:31:33.905623+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:31:33.909853+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:31:33.910050+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:31:33.910122+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:31:34.547089+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:31:34.577831+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:35.753858+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:35.754983+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:31:35.760158+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:31:35.761139+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:31:35.764626+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:35.764783+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:31:35.766002+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:35.766148+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:31:35.768404+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:31:35.773730+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:31:35.773990+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:31:35.775307+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:31:35.781045+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:31:35.782471+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:31:35.782716+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:31:35.787360+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:31:35.788519+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:31:35.789421+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250701183133","2":"2025-07-01 20:31:35","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250701183133","2":"2025-07-01 20:31:35","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-07-01T20:31:35.790391+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T20:31:35.799961+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:31:48.857753+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:31:48.889166+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:31:48.915566+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:31:48.921983+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T20:31:48.923919+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T20:31:48.924148+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T20:31:48.924321+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T20:31:48.924481+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T20:31:48.924637+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T20:31:48.924801+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T20:31:48.924956+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T20:31:48.925110+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T20:31:48.925262+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T20:31:48.925811+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:31:48.942998+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0"} []
[2025-07-01T20:31:48.948799+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:31:48.950250+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load --append". Message: "Call to undefined method App\Entity\Trip::setNombrePassagers()" {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Trip::setNombrePassagers() at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:38)","command":"doctrine:fixtures:load --append","message":"Call to undefined method App\\Entity\\Trip::setNombrePassagers()"} []
[2025-07-01T20:31:48.950588+02:00] console.DEBUG: Command "doctrine:fixtures:load --append" exited with code "1" {"command":"doctrine:fixtures:load --append","code":1} []
[2025-07-01T20:31:48.950839+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Trip::setNombrePassagers() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Trip::setNombrePassagers() at C:\\Ecoride symfony\\my_project\\src\\DataFixtures\\TripFixtures.php:38)"} []
[2025-07-01T20:31:48.958791+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:33:39.894869+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:33:40.036739+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:33:40.061606+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:33:40.068068+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Paris"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Paris"},"types":{"1":2}} []
[2025-07-01T20:33:40.070434+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lyon"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lyon"},"types":{"1":2}} []
[2025-07-01T20:33:40.070934+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Marseille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Marseille"},"types":{"1":2}} []
[2025-07-01T20:33:40.071354+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Bordeaux"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Bordeaux"},"types":{"1":2}} []
[2025-07-01T20:33:40.071767+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Lille"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Lille"},"types":{"1":2}} []
[2025-07-01T20:33:40.072181+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Toulouse"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Toulouse"},"types":{"1":2}} []
[2025-07-01T20:33:40.072523+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nice"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nice"},"types":{"1":2}} []
[2025-07-01T20:33:40.072885+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Nantes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Nantes"},"types":{"1":2}} []
[2025-07-01T20:33:40.073101+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Strasbourg"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Strasbourg"},"types":{"1":2}} []
[2025-07-01T20:33:40.073274+02:00] doctrine.DEBUG: Executing statement: INSERT INTO city (name) VALUES (?) (parameters: array{"1":"Rennes"}, types: array{"1":2}) {"sql":"INSERT INTO city (name) VALUES (?)","params":{"1":"Rennes"},"types":{"1":2}} []
[2025-07-01T20:33:40.074196+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:33:40.090497+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM city t0"} []
[2025-07-01T20:33:40.099786+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:33:40.100529+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-20 08:36:44","2":"2025-07-25 08:36:44","3":3,"4":24,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-20 08:36:44","2":"2025-07-25 08:36:44","3":3,"4":24,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.102967+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-03 06:57:02","2":"2025-07-08 06:57:02","3":5,"4":23,"5":30}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-03 06:57:02","2":"2025-07-08 06:57:02","3":5,"4":23,"5":30},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.103515+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-12 08:37:34","2":"2025-07-16 08:37:34","3":5,"4":27,"5":28}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-12 08:37:34","2":"2025-07-16 08:37:34","3":5,"4":27,"5":28},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.104034+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-09 08:57:46","2":"2025-07-13 08:57:46","3":3,"4":21,"5":27}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-09 08:57:46","2":"2025-07-13 08:57:46","3":3,"4":21,"5":27},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.104560+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-25 21:13:24","2":"2025-07-29 21:13:24","3":5,"4":27,"5":21}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-25 21:13:24","2":"2025-07-29 21:13:24","3":5,"4":27,"5":21},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.105262+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-14 04:30:08","2":"2025-07-19 04:30:08","3":5,"4":29,"5":26}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-14 04:30:08","2":"2025-07-19 04:30:08","3":5,"4":29,"5":26},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.105842+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-10 16:55:37","2":"2025-07-15 16:55:37","3":2,"4":26,"5":29}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-10 16:55:37","2":"2025-07-15 16:55:37","3":2,"4":26,"5":29},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.106224+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-13 22:18:52","2":"2025-07-14 22:18:52","3":1,"4":24,"5":21}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-13 22:18:52","2":"2025-07-14 22:18:52","3":1,"4":24,"5":21},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.106452+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-21 03:29:49","2":"2025-07-25 03:29:49","3":2,"4":23,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-21 03:29:49","2":"2025-07-25 03:29:49","3":2,"4":23,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.106660+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-20 01:05:34","2":"2025-07-21 01:05:34","3":5,"4":21,"5":23}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-20 01:05:34","2":"2025-07-21 01:05:34","3":5,"4":21,"5":23},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.106898+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-17 12:23:04","2":"2025-07-21 12:23:04","3":5,"4":30,"5":26}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-17 12:23:04","2":"2025-07-21 12:23:04","3":5,"4":30,"5":26},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.107265+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-27 21:26:21","2":"2025-07-29 21:26:21","3":5,"4":24,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-27 21:26:21","2":"2025-07-29 21:26:21","3":5,"4":24,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.107703+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-26 01:05:25","2":"2025-07-27 01:05:25","3":1,"4":22,"5":28}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-26 01:05:25","2":"2025-07-27 01:05:25","3":1,"4":22,"5":28},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.108049+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-08-01 20:17:20","2":"2025-08-05 20:17:20","3":3,"4":29,"5":24}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-08-01 20:17:20","2":"2025-08-05 20:17:20","3":3,"4":29,"5":24},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.108359+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-26 17:02:19","2":"2025-07-30 17:02:19","3":3,"4":24,"5":23}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-26 17:02:19","2":"2025-07-30 17:02:19","3":3,"4":24,"5":23},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.108652+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-09 23:04:06","2":"2025-07-14 23:04:06","3":3,"4":28,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-09 23:04:06","2":"2025-07-14 23:04:06","3":3,"4":28,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.108875+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-26 16:22:36","2":"2025-07-31 16:22:36","3":3,"4":26,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-26 16:22:36","2":"2025-07-31 16:22:36","3":3,"4":26,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.109077+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-29 22:23:30","2":"2025-07-31 22:23:30","3":5,"4":24,"5":22}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-29 22:23:30","2":"2025-07-31 22:23:30","3":5,"4":24,"5":22},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.109289+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-04 01:57:24","2":"2025-07-09 01:57:24","3":2,"4":27,"5":28}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-04 01:57:24","2":"2025-07-09 01:57:24","3":2,"4":27,"5":28},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.109497+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"2025-07-14 13:23:08","2":"2025-07-19 13:23:08","3":1,"4":21,"5":23}, types: array{"1":2,"2":2,"3":1,"4":1,"5":1}) {"sql":"INSERT INTO trip (date_depart, date_arrivee, nombre_passagers, ville_depart_id, ville_arrivee_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"2025-07-14 13:23:08","2":"2025-07-19 13:23:08","3":1,"4":21,"5":23},"types":{"1":2,"2":2,"3":1,"4":1,"5":1}} []
[2025-07-01T20:33:40.109707+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T20:33:40.109832+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T20:33:40.111909+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:47:38.731092+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:47:38.768643+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.771518+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:47:38.778040+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:47:38.779392+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:47:38.779576+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.779719+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:47:38.784186+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.784377+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:47:38.785988+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.786192+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:47:38.789048+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:47:38.796453+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.796791+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:47:38.799013+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.801510+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:38.806016+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.806232+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:47:38.807080+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.807246+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:47:38.808035+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.808159+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:47:38.808636+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.808773+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:47:38.809482+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:47:38.810862+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.811020+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:47:38.812007+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.812476+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:38.814965+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:47:38.815437+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.815612+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:47:38.817800+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:38.817964+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:47:38.821625+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:47:38.821942+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:47:38.822061+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:47:38.823422+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:47:38.824265+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:47:38.824818+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825045+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825309+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825463+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825601+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825730+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.825966+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16518   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16518\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.826158+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:47:38.826301+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:47:38.826435+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:38.828815+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:47:38.870710+02:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "The target-entity App\Entity\City cannot be found in 'App\Entity\Trip#villeDepart'." {"exception":"[object] (Doctrine\\ORM\\Mapping\\MappingException(code: 0): The target-entity App\\Entity\\City cannot be found in 'App\\Entity\\Trip#villeDepart'. at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\orm\\src\\Mapping\\MappingException.php:547)","command":"make:migration","message":"The target-entity App\\Entity\\City cannot be found in 'App\\Entity\\Trip#villeDepart'."} []
[2025-07-01T20:47:38.871096+02:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2025-07-01T20:47:38.878162+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:47:39.524439+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:47:39.556600+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:49.333608+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:49.334750+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:47:49.339567+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:47:49.340764+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:47:49.344230+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:49.344463+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:47:49.345673+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:49.345881+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:47:49.347992+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:47:49.353654+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:47:49.353917+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:47:49.355207+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:47:49.360772+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:49.362185+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:49.362449+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:49.363245+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:47:49.372228+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:49:29.672975+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:49:29.707596+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.710000+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:49:29.714789+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:49:29.715737+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:49:29.715875+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.716010+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:49:29.720158+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.720341+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:49:29.721459+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.721585+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:49:29.723652+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:49:29.729196+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.729393+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:49:29.730673+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.732443+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:49:29.736461+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.736696+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:49:29.737489+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.737613+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:49:29.738311+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.738412+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:49:29.738857+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.738978+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:49:29.739648+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:49:29.740940+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.741087+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:49:29.742090+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.742396+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:49:29.744369+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:49:29.744688+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.744796+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:49:29.747027+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:29.747285+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:49:29.750946+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:49:29.751291+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:49:29.751521+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:49:29.752835+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:49:29.753669+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:49:29.754347+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.754744+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.755100+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:49:29.755316+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:49:29.755537+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:49:29.755755+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.756062+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16518   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16518\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.756295+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:49:29.756435+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:49:29.756566+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:29.758497+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:49:29.768730+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:49:29.776278+02:00] deprecation.INFO: User Deprecated: Passing $constraint as a Constraint object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $constraint as a Constraint object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:49:29.776983+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:49:29.781605+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:49:29.781892+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:49:29.782001+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:49:30.402773+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:49:30.436980+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:32.264157+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:32.265330+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:49:32.271906+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:49:32.273272+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:49:32.276926+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:32.277130+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:49:32.278615+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:32.278840+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:49:32.281198+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:49:32.286686+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:49:32.286897+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:49:32.288166+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:49:32.293865+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:49:32.295305+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:49:32.295544+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:49:32.300484+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:49:32.301704+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:49:32.302209+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip DROP CONSTRAINT fk_7656f53b34ac9a4b {"sql":"ALTER TABLE trip DROP CONSTRAINT fk_7656f53b34ac9a4b"} []
[2025-07-01T20:49:32.304386+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip DROP CONSTRAINT fk_7656f53b497832a6 {"sql":"ALTER TABLE trip DROP CONSTRAINT fk_7656f53b497832a6"} []
[2025-07-01T20:49:32.304730+02:00] doctrine.DEBUG: Executing query: DROP SEQUENCE city_id_seq CASCADE {"sql":"DROP SEQUENCE city_id_seq CASCADE"} []
[2025-07-01T20:49:32.305144+02:00] doctrine.DEBUG: Executing query: DROP TABLE city {"sql":"DROP TABLE city"} []
[2025-07-01T20:49:32.305445+02:00] doctrine.DEBUG: Executing query: DROP INDEX idx_7656f53b34ac9a4b {"sql":"DROP INDEX idx_7656f53b34ac9a4b"} []
[2025-07-01T20:49:32.305575+02:00] doctrine.DEBUG: Executing query: DROP INDEX idx_7656f53b497832a6 {"sql":"DROP INDEX idx_7656f53b497832a6"} []
[2025-07-01T20:49:32.305716+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip ADD ville_depart VARCHAR(255) NOT NULL {"sql":"ALTER TABLE trip ADD ville_depart VARCHAR(255) NOT NULL"} []
[2025-07-01T20:49:32.309850+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:49:32.312831+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart » de la table « trip » contient des valeurs NULL" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 7): An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:47)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 23502): SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart » de la table « trip » contient des valeurs NULL at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[23502]: Not null violation: 7 ERREUR:  la colonne « ville_depart » de la table « trip » contient des valeurs NULL"} []
[2025-07-01T20:49:32.313511+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T20:49:32.345230+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:50:30.971365+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:50:31.004667+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:50:31.018781+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:50:31.021970+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:31.022261+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:50:31.026204+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:31.026412+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:50:31.034147+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:50:31.034669+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:50:31.034797+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:50:31.036907+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:50:31.039548+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:50:31.041381+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:31.041906+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:31.042185+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T20:50:31.042365+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T20:50:31.042502+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T20:50:31.042637+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16527   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16527\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:31.042864+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16518   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16518\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:31.043133+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (3) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (3)\nORDER BY attnum"} []
[2025-07-01T20:50:31.043272+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (2) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (2)\nORDER BY attnum"} []
[2025-07-01T20:50:31.043400+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16507   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16507\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:31.044490+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:50:31.045485+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:50:31.045611+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE trip_id_seq CASCADE {"sql":"DROP SEQUENCE trip_id_seq CASCADE"} []
[2025-07-01T20:50:31.049182+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE user_id_seq CASCADE {"sql":"DROP SEQUENCE user_id_seq CASCADE"} []
[2025-07-01T20:50:31.050394+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE messenger_messages_id_seq CASCADE {"sql":"DROP SEQUENCE messenger_messages_id_seq CASCADE"} []
[2025-07-01T20:50:31.051500+02:00] doctrine.DEBUG: Executing statement: DROP TABLE trip {"sql":"DROP TABLE trip"} []
[2025-07-01T20:50:31.053841+02:00] doctrine.DEBUG: Executing statement: DROP TABLE "user" {"sql":"DROP TABLE \"user\""} []
[2025-07-01T20:50:31.055464+02:00] doctrine.DEBUG: Executing statement: DROP TABLE messenger_messages {"sql":"DROP TABLE messenger_messages"} []
[2025-07-01T20:50:31.066667+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:50:31.067035+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:50:31.067147+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:50:31.652311+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:50:31.785990+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:32.830735+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:32.831970+02:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' ORDER BY   quote_ident(table_name) (parameters: array{"1":"ecoridedb"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'\nORDER BY\n  quote_ident(table_name)","params":{"1":"ecoridedb"},"types":{"1":2}} []
[2025-07-01T20:50:32.837128+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:50:32.838533+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:50:32.841995+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:32.842193+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:50:32.843287+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:32.843417+02:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:50:32.845630+02:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:50:32.852157+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:32.852435+02:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:50:32.853861+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:50:32.860039+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:50:32.861833+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:50:32.862205+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-07-01T20:50:32.867166+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T20:50:32.868557+02:00] deprecation.INFO: User Deprecated: The "Doctrine\Migrations\Provider\LazySchema" class uses "Symfony\Component\VarExporter\LazyProxyTrait" that is deprecated since Symfony 7.3, use native lazy objects instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Doctrine\\Migrations\\Provider\\LazySchema\" class uses \"Symfony\\Component\\VarExporter\\LazyProxyTrait\" that is deprecated since Symfony 7.3, use native lazy objects instead. at C:\\Ecoride symfony\\my_project\\vendor\\symfony\\error-handler\\DebugClassLoader.php:347)"} []
[2025-07-01T20:50:32.868971+02:00] doctrine.DEBUG: Executing query: ALTER TABLE trip DROP CONSTRAINT fk_7656f53b34ac9a4b {"sql":"ALTER TABLE trip DROP CONSTRAINT fk_7656f53b34ac9a4b"} []
[2025-07-01T20:50:32.873221+02:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-07-01T20:50:32.875004+02:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 7): An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\API\\PostgreSQL\\ExceptionConverter.php:71)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Exception.php:24)\n[previous exception] [object] (PDOException(code: 42P01): SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\dbal\\src\\Driver\\PDO\\Connection.php:71)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing a query: SQLSTATE[42P01]: Undefined table: 7 ERREUR:  la relation « trip » n'existe pas"} []
[2025-07-01T20:50:32.875370+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2025-07-01T20:50:32.887587+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:50:33.475796+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:50:33.508336+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:50:35.785321+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Fixture "App\DataFixtures\CityFixtures" was declared as a dependency, but it should be added in fixture loader first." {"exception":"[object] (RuntimeException(code: 0): Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first. at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\data-fixtures\\src\\Loader.php:358)","command":"doctrine:fixtures:load","message":"Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first."} []
[2025-07-01T20:50:35.785626+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T20:50:35.793530+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:51:56.258401+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:51:56.291575+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:51:56.306901+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:51:56.310442+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:51:56.310778+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:51:56.314791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:51:56.315112+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:51:56.322374+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:51:56.322758+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:51:56.322888+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:51:56.324500+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:51:56.326402+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:51:56.328293+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:51:56.328759+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:51:56.328952+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:51:56.337762+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:51:56.338114+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:51:56.338226+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:52:54.823904+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:52:54.856392+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:52:54.870533+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T20:52:54.874321+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:52:54.874574+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T20:52:54.879457+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T20:52:54.879669+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T20:52:54.887290+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T20:52:54.887726+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:52:54.887867+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T20:52:54.889730+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T20:52:54.891912+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T20:52:54.894160+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:52:54.894841+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T20:52:54.895060+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:52:54.904349+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:52:54.904711+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:52:54.904811+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T20:52:59.604398+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T20:52:59.637232+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T20:52:59.671379+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:52:59.672321+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T20:52:59.672622+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:52:59.682754+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:52:59.685604+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T20:52:59.688206+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T20:52:59.689267+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T20:52:59.690098+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T20:52:59.690796+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:52:59.691544+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:52:59.691718+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T20:52:59.691960+02:00] doctrine.DEBUG: Executing statement: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$     BEGIN         PERFORM pg_notify('messenger_messages', NEW.queue_name::text);         RETURN NEW;     END; $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n    BEGIN\n        PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n        RETURN NEW;\n    END;\n$$ LANGUAGE plpgsql;"} []
[2025-07-01T20:52:59.693485+02:00] doctrine.DEBUG: Executing statement: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T20:52:59.694757+02:00] doctrine.DEBUG: Executing statement: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T20:52:59.699500+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:52:59.699822+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T20:52:59.699929+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:01:40.170827+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:01:40.202939+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:01:40.218786+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T21:01:40.221674+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:01:40.221884+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T21:01:40.225716+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:01:40.225983+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T21:01:40.234212+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T21:01:40.234737+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:01:40.234877+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T21:01:40.236616+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T21:01:40.238643+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T21:01:40.240539+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:01:40.241093+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16562   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16562\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:01:40.241337+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:01:40.241547+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16551   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16551\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:01:40.241784+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16571   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16571\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T21:01:40.241939+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16571   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16571\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T21:01:40.242073+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16571   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16571\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T21:01:40.242204+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16571   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16571\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:01:40.242375+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:01:40.243033+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:01:40.243132+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE trip_id_seq CASCADE {"sql":"DROP SEQUENCE trip_id_seq CASCADE"} []
[2025-07-01T21:01:40.246117+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE user_id_seq CASCADE {"sql":"DROP SEQUENCE user_id_seq CASCADE"} []
[2025-07-01T21:01:40.247165+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE messenger_messages_id_seq CASCADE {"sql":"DROP SEQUENCE messenger_messages_id_seq CASCADE"} []
[2025-07-01T21:01:40.248036+02:00] doctrine.DEBUG: Executing statement: DROP TABLE trip {"sql":"DROP TABLE trip"} []
[2025-07-01T21:01:40.249564+02:00] doctrine.DEBUG: Executing statement: DROP TABLE "user" {"sql":"DROP TABLE \"user\""} []
[2025-07-01T21:01:40.250939+02:00] doctrine.DEBUG: Executing statement: DROP TABLE messenger_messages {"sql":"DROP TABLE messenger_messages"} []
[2025-07-01T21:01:40.262673+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:01:40.263056+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:01:40.263167+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:01:46.062001+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:01:46.095015+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:01:46.110424+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:01:46.111266+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:01:46.111466+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:01:46.120792+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:01:46.124313+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:01:46.127796+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T21:01:46.129600+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T21:01:46.131473+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T21:01:46.132443+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:01:46.133198+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:01:46.133404+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:01:46.133643+02:00] doctrine.DEBUG: Executing statement: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$     BEGIN         PERFORM pg_notify('messenger_messages', NEW.queue_name::text);         RETURN NEW;     END; $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n    BEGIN\n        PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n        RETURN NEW;\n    END;\n$$ LANGUAGE plpgsql;"} []
[2025-07-01T21:01:46.135156+02:00] doctrine.DEBUG: Executing statement: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T21:01:46.136492+02:00] doctrine.DEBUG: Executing statement: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T21:01:46.141299+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:01:46.141652+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:01:46.141792+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:05:03.472657+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:05:03.606138+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:05:05.463555+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Fixture "App\DataFixtures\CityFixtures" was declared as a dependency, but it should be added in fixture loader first." {"exception":"[object] (RuntimeException(code: 0): Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first. at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\data-fixtures\\src\\Loader.php:358)","command":"doctrine:fixtures:load","message":"Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first."} []
[2025-07-01T21:05:05.463934+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T21:05:05.473121+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:06:15.217966+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:06:15.354811+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:06:15.369842+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-01T21:06:15.373888+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:06:15.374225+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-01T21:06:15.378173+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:06:15.378437+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-01T21:06:15.386988+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-01T21:06:15.387380+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:06:15.387528+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-01T21:06:15.389411+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-01T21:06:15.391504+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-01T21:06:15.393466+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16606   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16606\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-01T21:06:15.393895+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16606   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16606\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394064+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16606   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16606\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394204+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16606   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16606\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394427+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16586   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16586\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394640+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16597   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16597\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394827+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16392   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16392\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:06:15.394990+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-01T21:06:15.395143+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:06:15.395737+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:06:15.395904+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE trip_id_seq CASCADE {"sql":"DROP SEQUENCE trip_id_seq CASCADE"} []
[2025-07-01T21:06:15.398904+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE user_id_seq CASCADE {"sql":"DROP SEQUENCE user_id_seq CASCADE"} []
[2025-07-01T21:06:15.399878+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE messenger_messages_id_seq CASCADE {"sql":"DROP SEQUENCE messenger_messages_id_seq CASCADE"} []
[2025-07-01T21:06:15.400762+02:00] doctrine.DEBUG: Executing statement: DROP TABLE trip {"sql":"DROP TABLE trip"} []
[2025-07-01T21:06:15.402260+02:00] doctrine.DEBUG: Executing statement: DROP TABLE "user" {"sql":"DROP TABLE \"user\""} []
[2025-07-01T21:06:15.403692+02:00] doctrine.DEBUG: Executing statement: DROP TABLE messenger_messages {"sql":"DROP TABLE messenger_messages"} []
[2025-07-01T21:06:15.415379+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:06:15.415854+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:06:15.416036+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:06:23.326802+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:06:23.363385+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-01T21:06:23.379921+02:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:06:23.380878+02:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-01T21:06:23.381090+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE trip (id SERIAL NOT NULL, ville_depart VARCHAR(255) NOT NULL, ville_arrivee VARCHAR(255) NOT NULL, date_depart TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, date_arrivee TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, nombre_passagers INT NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:06:23.390142+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(50) NOT NULL, nom VARCHAR(50) NOT NULL, prenom VARCHAR(50) NOT NULL, password VARCHAR(260) NOT NULL, pseudo VARCHAR(50) NOT NULL, telephone VARCHAR(50) NOT NULL, adresse VARCHAR(50) NOT NULL, date_naissance VARCHAR(50) NOT NULL, photo BYTEA NOT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:06:23.393190+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-07-01T21:06:23.396142+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-07-01T21:06:23.397129+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-07-01T21:06:23.397952+02:00] doctrine.DEBUG: Executing statement: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-07-01T21:06:23.398698+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:06:23.399451+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:06:23.399638+02:00] doctrine.DEBUG: Executing statement: COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-07-01T21:06:23.399825+02:00] doctrine.DEBUG: Executing statement: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$     BEGIN         PERFORM pg_notify('messenger_messages', NEW.queue_name::text);         RETURN NEW;     END; $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n    BEGIN\n        PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n        RETURN NEW;\n    END;\n$$ LANGUAGE plpgsql;"} []
[2025-07-01T21:06:23.401282+02:00] doctrine.DEBUG: Executing statement: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-07-01T21:06:23.402726+02:00] doctrine.DEBUG: Executing statement: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-07-01T21:06:23.407465+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:06:23.407881+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-01T21:06:23.408003+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:06:28.990713+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:06:29.025569+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:06:31.189261+02:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Fixture "App\DataFixtures\CityFixtures" was declared as a dependency, but it should be added in fixture loader first." {"exception":"[object] (RuntimeException(code: 0): Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first. at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\data-fixtures\\src\\Loader.php:358)","command":"doctrine:fixtures:load","message":"Fixture \"App\\DataFixtures\\CityFixtures\" was declared as a dependency, but it should be added in fixture loader first."} []
[2025-07-01T21:06:31.189599+02:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-07-01T21:06:31.197942+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:22:44.731081+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:22:44.763244+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-01T21:22:48.015215+02:00] doctrine.DEBUG: Beginning transaction [] []
[2025-07-01T21:22:48.026636+02:00] doctrine.DEBUG: Executing statement: DELETE FROM trip {"sql":"DELETE FROM trip"} []
[2025-07-01T21:22:48.028107+02:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-07-01T21:22:48.055808+02:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-07-01T21:22:48.061812+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Bordeaux","3":"2025-08-01 17:51:37","4":"2025-08-05 17:51:37","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Bordeaux","3":"2025-08-01 17:51:37","4":"2025-08-05 17:51:37","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.062912+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Paris","3":"2025-07-04 12:36:42","4":"2025-07-07 12:36:42","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Paris","3":"2025-07-04 12:36:42","4":"2025-07-07 12:36:42","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.063377+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Strasbourg","3":"2025-07-19 03:00:35","4":"2025-07-22 03:00:35","5":5}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Strasbourg","3":"2025-07-19 03:00:35","4":"2025-07-22 03:00:35","5":5},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.063670+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Nice","3":"2025-07-15 05:28:41","4":"2025-07-18 05:28:41","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Nice","3":"2025-07-15 05:28:41","4":"2025-07-18 05:28:41","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.063967+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Lyon","2":"Nantes","3":"2025-07-20 21:21:08","4":"2025-07-25 21:21:08","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Lyon","2":"Nantes","3":"2025-07-20 21:21:08","4":"2025-07-25 21:21:08","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.064221+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Toulouse","3":"2025-07-25 10:21:15","4":"2025-07-30 10:21:15","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Toulouse","3":"2025-07-25 10:21:15","4":"2025-07-30 10:21:15","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.064417+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Marseille","3":"2025-07-19 16:20:13","4":"2025-07-21 16:20:13","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Marseille","3":"2025-07-19 16:20:13","4":"2025-07-21 16:20:13","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.064596+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Marseille","3":"2025-07-03 19:40:27","4":"2025-07-05 19:40:27","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Marseille","3":"2025-07-03 19:40:27","4":"2025-07-05 19:40:27","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.064773+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Strasbourg","3":"2025-07-11 06:51:31","4":"2025-07-15 06:51:31","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Strasbourg","3":"2025-07-11 06:51:31","4":"2025-07-15 06:51:31","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065004+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Marseille","2":"Rennes","3":"2025-07-31 02:33:32","4":"2025-08-04 02:33:32","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Marseille","2":"Rennes","3":"2025-07-31 02:33:32","4":"2025-08-04 02:33:32","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065198+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Toulouse","3":"2025-07-06 06:42:49","4":"2025-07-09 06:42:49","5":4}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Toulouse","3":"2025-07-06 06:42:49","4":"2025-07-09 06:42:49","5":4},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065386+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Toulouse","3":"2025-07-03 03:27:30","4":"2025-07-06 03:27:30","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Toulouse","3":"2025-07-03 03:27:30","4":"2025-07-06 03:27:30","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065561+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Toulouse","2":"Nantes","3":"2025-07-05 17:04:44","4":"2025-07-07 17:04:44","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Toulouse","2":"Nantes","3":"2025-07-05 17:04:44","4":"2025-07-07 17:04:44","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065737+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Rennes","3":"2025-08-01 11:26:06","4":"2025-08-06 11:26:06","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Rennes","3":"2025-08-01 11:26:06","4":"2025-08-06 11:26:06","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.065912+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Nantes","3":"2025-07-29 00:16:14","4":"2025-07-30 00:16:14","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Nantes","3":"2025-07-29 00:16:14","4":"2025-07-30 00:16:14","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.066095+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Nantes","2":"Lyon","3":"2025-07-14 03:53:50","4":"2025-07-18 03:53:50","5":1}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Nantes","2":"Lyon","3":"2025-07-14 03:53:50","4":"2025-07-18 03:53:50","5":1},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.066286+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Paris","2":"Rennes","3":"2025-07-13 17:26:00","4":"2025-07-17 17:26:00","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Paris","2":"Rennes","3":"2025-07-13 17:26:00","4":"2025-07-17 17:26:00","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.066466+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Bordeaux","2":"Lille","3":"2025-07-10 05:19:19","4":"2025-07-14 05:19:19","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Bordeaux","2":"Lille","3":"2025-07-10 05:19:19","4":"2025-07-14 05:19:19","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.066641+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Rennes","2":"Lille","3":"2025-07-06 03:29:04","4":"2025-07-07 03:29:04","5":2}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Rennes","2":"Lille","3":"2025-07-06 03:29:04","4":"2025-07-07 03:29:04","5":2},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.066823+02:00] doctrine.DEBUG: Executing statement: INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"Strasbourg","2":"Rennes","3":"2025-07-30 23:30:20","4":"2025-08-04 23:30:20","5":3}, types: array{"1":2,"2":2,"3":2,"4":2,"5":1}) {"sql":"INSERT INTO trip (ville_depart, ville_arrivee, date_depart, date_arrivee, nombre_passagers) VALUES (?, ?, ?, ?, ?)","params":{"1":"Strasbourg","2":"Rennes","3":"2025-07-30 23:30:20","4":"2025-08-04 23:30:20","5":3},"types":{"1":2,"2":2,"3":2,"4":2,"5":1}} []
[2025-07-01T21:22:48.067502+02:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-07-01T21:22:48.067661+02:00] doctrine.DEBUG: Committing transaction [] []
[2025-07-01T21:22:48.069689+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:55:53.372268+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T21:55:53.378275+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T21:55:53.460255+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:55:53.616778+02:00] doctrine.DEBUG: Executing query: SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_ {"sql":"SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_"} []
[2025-07-01T21:55:53.703127+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:55:53.980491+02:00] request.INFO: Matched route "_wdt_stylesheet". {"route":"_wdt_stylesheet","route_parameters":{"_route":"_wdt_stylesheet","_controller":"web_profiler.controller.profiler::toolbarStylesheetAction"},"request_uri":"https://127.0.0.1:8000/_wdt/styles","method":"GET"} []
[2025-07-01T21:55:54.170183+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2408c8"},"request_uri":"https://127.0.0.1:8000/_wdt/2408c8?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T21:57:51.573948+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T21:57:51.581554+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T21:57:51.675127+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:57:51.710612+02:00] doctrine.DEBUG: Executing query: SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_ {"sql":"SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_"} []
[2025-07-01T21:57:51.795481+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:57:52.081120+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3af342"},"request_uri":"https://127.0.0.1:8000/_wdt/3af342?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-01T21:59:03.925697+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"https://127.0.0.1:8000/","method":"GET"} []
[2025-07-01T21:59:03.932532+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2025-07-01T21:59:04.014930+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-01T21:59:04.044065+02:00] doctrine.DEBUG: Executing query: SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_ {"sql":"SELECT DISTINCT t0_.ville_depart AS ville_depart_0 FROM trip t0_"} []
[2025-07-01T21:59:04.109478+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-01T21:59:04.365085+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0652b2"},"request_uri":"https://127.0.0.1:8000/_wdt/0652b2?XDEBUG_IGNORE=1","method":"GET"} []
[2025-07-04T17:07:53.512365+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"17","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"17","charset":"utf8","dbname":"postgres"}} []
[2025-07-04T17:07:53.895716+02:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "ecoridedb" {"sql":"CREATE DATABASE \"ecoridedb\""} []
[2025-07-04T17:07:54.029280+02:00] doctrine.INFO: Disconnecting [] []
[2025-07-04T17:07:54.030283+02:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-07-04T17:08:21.387440+02:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"Admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"ecoridedb","serverVersion":"17","charset":"utf8"}} []
[2025-07-04T17:08:21.439676+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-04T17:08:21.838933+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-04T17:08:21.883466+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-04T17:08:21.886279+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-04T17:08:21.926298+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-04T17:08:21.926664+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-04T17:08:21.956146+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-07-04T17:08:21.956746+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-04T17:08:21.956913+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-04T17:08:21.960318+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-04T17:08:21.965923+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-04T17:08:22.042543+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16631   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16631\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.045717+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.046059+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16620   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16620\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.046436+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-04T17:08:22.046693+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-04T17:08:22.046945+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-04T17:08:22.047107+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.047280+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-04T17:08:22.122043+02:00] deprecation.INFO: User Deprecated: Passing $sequence as a Sequence object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $sequence as a Sequence object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropSequenceSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:2434 called by PostgreSQLPlatform.php:808, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at C:\\Ecoride symfony\\my_project\\vendor\\doctrine\\deprecations\\src\\Deprecation.php:208)"} []
[2025-07-04T17:08:22.122522+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-04T17:08:22.123017+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-07-04T17:08:22.123445+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-04T17:08:22.123570+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'ecoridedb'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'ecoridedb'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-07-04T17:08:22.124177+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-07-04T17:08:22.124343+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT quote_ident(c.relname) AS table_name, quote_ident(n.nspname) AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-07-04T17:08:22.127855+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) ORDER BY quote_ident(ic.relname)"} []
[2025-07-04T17:08:22.129101+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname) {"sql":"SELECT quote_ident(tc.relname) AS table_name, quote_ident(tn.nspname) AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' ORDER BY quote_ident(r.conname)"} []
[2025-07-04T17:08:22.129839+02:00] doctrine.DEBUG: Executing query: SELECT n.nspname AS schema_name,        c.relname AS table_name,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT n.nspname AS schema_name,\n       c.relname AS table_name,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-07-04T17:08:22.130623+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16631   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16631\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.131130+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16500   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16500\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.131490+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16620   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16620\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.131937+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (7) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (7)\nORDER BY attnum"} []
[2025-07-04T17:08:22.132314+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (6) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (6)\nORDER BY attnum"} []
[2025-07-04T17:08:22.132534+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (4) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (4)\nORDER BY attnum"} []
[2025-07-04T17:08:22.132705+02:00] doctrine.DEBUG: Executing query: SELECT attnum,        quote_ident(attname) AS attname FROM pg_attribute WHERE attrelid = 16640   AND attnum IN (1) ORDER BY attnum {"sql":"SELECT attnum,\n       quote_ident(attname) AS attname\nFROM pg_attribute\nWHERE attrelid = 16640\n  AND attnum IN (1)\nORDER BY attnum"} []
[2025-07-04T17:08:22.132909+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-07-04T17:08:22.133695+02:00] doctrine.DEBUG: Executing statement: DROP SEQUENCE city_id_seq CASCADE {"sql":"DROP SEQUENCE city_id_seq CASCADE"} []
[2025-07-04T17:08:22.143320+02:00] doctrine.DEBUG: Executing statement: DROP TABLE city {"sql":"DROP TABLE city"} []
[2025-07-04T17:08:22.153892+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-04T17:08:22.154266+02:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-07-04T17:08:22.154364+02:00] doctrine.INFO: Disconnecting [] []
